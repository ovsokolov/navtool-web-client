[{"/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/index.js":"1","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/App.js":"2","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/reportWebVitals.js":"3","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/utils/store_config.js":"4","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/reducers/index.js":"5","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/actions/ftp_actions.js":"6","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/utils/constants.js":"7","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/utils/device_utils.js":"8","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/utils/structures.js":"9","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/reducers/reducer_device_settings.js":"10","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/actions/hid_actions.js":"11","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/containers/device.js":"12","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/reducers/reducer_sofrtware_update.js":"13","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/containers/device_info.js":"14","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/actions/get_device_data.js":"15","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/actions/get_software.js":"16","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/reducers/reducer_software_list.js":"17","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/containers/software_list.js":"18","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/reducers/reducer_make.js":"19","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/containers/make_list.js":"20","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/containers/software_search.js":"21","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/containers/year_list.js":"22","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/containers/transmission_option.js":"23","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/containers/model_list.js":"24","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/reducers/reducer_model.js":"25","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/reducers/reducer_year.js":"26","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/reducers/reducer_software_search.js":"27","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/containers/input_settings.js":"28","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/containers/misc_settings.js":"29","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/reducers/reducer_messages.js":"30","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/actions/misc_actions.js":"31"},{"size":677,"mtime":1628012153489,"results":"32","hashOfConfig":"33"},{"size":562,"mtime":1628183897145,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":1611692142606,"results":"35","hashOfConfig":"33"},{"size":263,"mtime":1616531933788,"results":"36","hashOfConfig":"33"},{"size":838,"mtime":1627674191410,"results":"37","hashOfConfig":"33"},{"size":1505,"mtime":1634665508055,"results":"38","hashOfConfig":"33"},{"size":6586,"mtime":1668703656833,"results":"39","hashOfConfig":"33"},{"size":22175,"mtime":1627927869276,"results":"40","hashOfConfig":"33"},{"size":18902,"mtime":1669833802249,"results":"41","hashOfConfig":"33"},{"size":9672,"mtime":1626891138337,"results":"42","hashOfConfig":"33"},{"size":9375,"mtime":1669834519552,"results":"43","hashOfConfig":"33"},{"size":14384,"mtime":1668703227323,"results":"44","hashOfConfig":"33"},{"size":8122,"mtime":1669834641424,"results":"45","hashOfConfig":"33"},{"size":4858,"mtime":1628176985485,"results":"46","hashOfConfig":"33"},{"size":4061,"mtime":1627498808838,"results":"47","hashOfConfig":"33"},{"size":4187,"mtime":1669831678601,"results":"48","hashOfConfig":"33"},{"size":496,"mtime":1627501576703,"results":"49","hashOfConfig":"33"},{"size":4538,"mtime":1669923557233,"results":"50","hashOfConfig":"33"},{"size":641,"mtime":1627410771154,"results":"51","hashOfConfig":"33"},{"size":1431,"mtime":1627503548758,"results":"52","hashOfConfig":"33"},{"size":5754,"mtime":1669831434891,"results":"53","hashOfConfig":"33"},{"size":1047,"mtime":1566859722000,"results":"54","hashOfConfig":"33"},{"size":1240,"mtime":1566859146000,"results":"55","hashOfConfig":"33"},{"size":953,"mtime":1493161544000,"results":"56","hashOfConfig":"33"},{"size":762,"mtime":1627501635825,"results":"57","hashOfConfig":"33"},{"size":971,"mtime":1633562702791,"results":"58","hashOfConfig":"33"},{"size":2993,"mtime":1669832091196,"results":"59","hashOfConfig":"33"},{"size":4470,"mtime":1627679654449,"results":"60","hashOfConfig":"33"},{"size":5021,"mtime":1627920230090,"results":"61","hashOfConfig":"33"},{"size":1637,"mtime":1633548626053,"results":"62","hashOfConfig":"33"},{"size":149,"mtime":1627677384422,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"cf1yyq",{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"66"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":39,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"66"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"66"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"66"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"66"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"66"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/index.js",[],["145","146"],"/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/App.js",["147"],"import logo from './logo.svg';\nimport './App.css';\nimport Device from './containers/device';\n\n\n\nfunction App() {\n  if(\"hid\" in navigator){\n    return (\n      <div className=\"App\">\n          <Device />\n      </div>\n    );\n  }else{\n    return (\n      <div   style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      }}>\n          Please use supporterd desktop platforms (Chrome OS, Linux, macOS, and Windows) and latest version of supported browsers (Chrome and Edge).\n      </div>\n    );   \n  }\n}\n\nexport default App;\n","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/reportWebVitals.js",[],"/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/utils/store_config.js",[],"/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/reducers/index.js",[],"/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/actions/ftp_actions.js",["148","149"],"import axios from 'axios';\nimport CryptoJS from 'crypto-js';\nimport {    WEB_SERVICES_URL } from '../utils/constants';\nimport {    FTP_LOAD_PROGRESS,\n            FTP_LOAD_SUCCESS,\n            FTP_LOAD_FAILURE,\n            START_SOFTWARE_UPDATE }  from '../utils/constants';\n\n\n//const ROOT_URL = \"https://tranquil-mesa-29755.herokuapp.com/ftpload\";\nconst ROOT_URL = WEB_SERVICES_URL + \"/v1/ftpload\";\n//const ROOT_URL = \"http://dashconnectplus.com/wp-content/themes/DashConnectPlus/dc_ftp_file_get.php\"\n\nexport function loadFTPFile(sw_id){\n  const url = ROOT_URL + \"?sw_id=\" + sw_id;\n  const request = axios.get(url);\n\n  //console.log('URL', url);\n  //console.log('sw_id', sw_id);\n  return (dispatch) => {\n    dispatch( { type: FTP_LOAD_PROGRESS, payload: \"\" } );\n    request.then( ({data}) =>{\n      let words  = CryptoJS.enc.Base64.parse(data.file);\n      let fileMD5 = CryptoJS.MD5(words).toString();\n      console.log(data);\n      console.log(fileMD5);\n      if(fileMD5 == data.md5){\n        console.log(\"MD5 calculation is correct\");\n\n        dispatch( { type: FTP_LOAD_SUCCESS, payload: data } );\n      }else{\n        console.log(\"MD5 calculation not correct\");\n        dispatch( { type: FTP_LOAD_FAILURE, payload: { message_header: 'FTP File Load', message_text: 'File load failed check sum', id: 'ftpfailed'}});\n      }\n    },\n    error => {\n      dispatch( { type: FTP_LOAD_FAILURE, payload: { message_header: 'FTP File Load', message_text: 'File load failed', id: 'ftpfailed'}});\n\n    });\n\n  };\n}\n","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/utils/constants.js",[],"/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/utils/device_utils.js",["150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168"],"import { TRANSFER_SET_UP_DATA_RESPONSE ,\n         TRANSFER_STATUS_DATA_RESPONSE } from '../utils/structures';\n\nimport { DEVICE_APP_STATUS, DEVICE_SBL_STATUS} from '../utils/constants';\n\nexport function setDeviceSettings(data, settings){\n  let device_data = data;\n  //byte 1\n  let byte1 = \"\";\n  byte1 = settings[\"SoundSupported\"] + byte1;\n  byte1 = settings[\"ObdSupported\"] + byte1;\n  byte1 = settings[\"ConfigSupported\"] + byte1;\n  byte1 = settings[\"RearCameraSupported\"] + byte1;\n  byte1 = settings[\"FrontCameraSupported\"] + byte1;\n  byte1 = settings[\"LeftCameraSupported\"] + byte1;\n  byte1 = settings[\"RightCameraSupported\"] + byte1;\n  byte1 = settings[\"ReservedSupported\"] + byte1;\n  //console.log(byte1);\n  //byte 2\n  let byte2 = \"\";\n  byte2 = settings[\"SoundEnabled\"] + byte2;\n  byte2 = settings[\"RearCameraEnabled\"] + byte2;\n  byte2 = settings[\"FrontCameraEnabled\"] + byte2;\n  byte2 = settings[\"LeftCameraEnabled\"] + byte2;\n  byte2 = settings[\"RightCameraEnabled\"] + byte2;\n  byte2 = settings[\"FactoryRearCamera\"] + byte2;\n  byte2 = settings[\"FactoryFrontCamera\"] + byte2;\n  byte2 = settings[\"FactoryLeftCamera\"] + byte2;\n  //console.log(byte2);\n  //byte_3;\n  let byte3 = \"\";\n  byte3 = settings[\"HDMIEnabled\"] + byte3;\n  byte3 = settings[\"RGBEnabled\"] + byte3;\n  byte3 = settings[\"Input1Enabled\"] + byte3;\n  byte3 = settings[\"Input2Enabled\"] + byte3;\n  byte3 = settings[\"Input3Enabled\"] + byte3;\n  byte3 = settings[\"Input4Enabled\"] + byte3;\n  byte3 = settings[\"NotUsed\"] + byte3;\n  //console.log(byte3);\n  //byte_4;\n  let byte4 = \"\";\n  byte4 = settings[\"FactoryRightCamera\"] + byte4;\n  byte4 = settings[\"FrontCameraMode\"] + byte4;\n  byte4 = settings[\"SideCameraMode\"] + byte4;\n  byte4 = settings[\"ResrvedBits\"] + byte4;\n  //console.log(byte4);\n  //byte_5;\n  let byte5 = \"\";\n  byte5 = settings[\"IsDefaultSettings\"] + byte5;\n  byte5 = settings[\"VideoInputs\"] + byte5;\n  byte5 = settings[\"VIMCapacity\"] + byte5;\n  byte5 = settings[\"RGBCapacity\"] + byte5;\n  byte5 = settings[\"HDMICapacity\"] + byte5;\n  byte5 = settings[\"ParkingLinesDisabled\"] + byte5;\n\n  //byte 6  \n  let byte6 = \"\";\n  byte6 = settings[\"ScreenSize\"] + byte6;\n  byte6 = settings[\"CSyncPolarity\"] + byte6;\n  byte6 = settings[\"SOGEnabled\"] + byte6;\n  byte6 = settings[\"VIMEnabled\"] + byte6; \n\n\n  //byte 7\n  let byte7 = \"\";\n  byte7 = settings[\"VideoSize1\"] + byte7;\n  byte7 = settings[\"VideoSize2\"] + byte7;\n  byte7 = settings[\"VideoSize3\"] + byte7;\n  byte7 = settings[\"VideoSize4\"] + byte7; \n  \n  //byte 8\n  let byte8 = \"\";\n  byte8 = settings[\"VideoFunction1\"] + byte8;\n  byte8 = settings[\"VideoFunction2\"] + byte8;\n  byte8 = settings[\"VideoFunction3\"] + byte8;\n  byte8 = settings[\"VideoFunction4\"] + byte8; \n\n\n  device_data[21] = parseInt(byte1,2);\n  device_data[22] = parseInt(byte2,2);\n  device_data[23] = parseInt(byte3,2);\n  device_data[24] = parseInt(byte4,2);\n  device_data[25] = parseInt(byte5,2);\n  device_data[26] = parseInt(byte6,2);\n  device_data[27] = parseInt(byte7,2);\n  device_data[28] = parseInt(byte8,2);\n  \n  let result = [];\n  result[0] = 0x00;\n  result[1] = 0x1B;\n  for(var i = 0; i < 43; i++){\n    result[2 + i] =   device_data[21 + i];\n  }\n  //console.log(result);\n  //console.log(result.length);\n  return result;\n}\n\nexport function setDeviceOSDSettings(settings){\n\n  //byte 1\n  let byte1 = \"\";\n  byte1 = settings[\"OsdCVBS1\"] + byte1;\n  byte1 = settings[\"OsdCVBS2\"] + byte1;\n  byte1 = settings[\"OsdCVBS3\"] + byte1;\n  byte1 = settings[\"OsdCVBS4\"] + byte1;\n\n  //console.log(byte1);\n  //byte 2\n  let byte2 = \"\";\n  byte2 = settings[\"TextMenuHDMI\"] + byte2;\n  byte2 = settings[\"TextMenuRGB\"] + byte2;\n  byte2 = settings[\"TextMenuCh1\"] + byte2;\n  byte2 = settings[\"TextMenuCh2\"] + byte2;\n  //console.log(byte2);\n  //byte_3;\n  let byte3 = \"\";\n  byte3 = settings[\"TextMenuCh3\"] + byte3;\n  byte3 = settings[\"TextMenuCh4\"] + byte3;\n  byte3 = settings[\"Reserved2\"] + byte3;\n  //console.log(byte3);\n  //byte_4;\n  let byte4 = settings[\"Reserved3\"];\n  //console.log(byte4);\n\n  let result = [];\n  result[0] = 0x00;\n  result[1] = 0x66;\n  result[2] = settings[\"BackgroundColor\"];\n  result[3] = settings[\"TextColor\"];\n  result[4] = settings[\"HighlightColor\"];\n  result[5] = settings[\"Reserved1\"];\n  result[6] = parseInt(byte1,2);\n  result[7] = parseInt(byte2,2);\n  result[8] = parseInt(byte3,2);\n  result[9] = parseInt(byte4,2);\n\n  //console.log(result);\n  //console.log(result.length);\n  return result;\n}\n\nexport function setDeviceOBDSettings(settings){\n  console.log(\"OBD Settings \", settings);\n  //byte 1\n  let byte1 = \"\";\n  byte1 = settings[\"obd_feature_idx1\"] + byte1;\n  byte1 = settings[\"obd_feature_idx2\"] + byte1;\n  byte1 = settings[\"obd_feature_idx3\"] + byte1;\n  byte1 = \"00000\" + byte1;\n\n  console.log(byte1);\n\n  let result = [];\n  result[0] = 0x00;\n  result[1] = 0x61;\n  result[2] = parseInt(byte1,2);\n\n  console.log(result);\n  //console.log(result.length);\n  return result;\n}\n\nexport function getDeviceData(deviceData){\n  let bareNum;\n  let serial_number = \"\";\n  let hexStringFrmt = \"00\"\n  for (var i = 0; i < 16; i++) {\n    if (i % 4 == 0 && i > 0) {\n      serial_number += \"-\";\n    }\n    bareNum = deviceData[3+i].toString(16);\n    serial_number += hexStringFrmt.substring((bareNum).length, 2) + bareNum;\n  }\n\n  let serialNumber = serial_number.toUpperCase();\n\n  //19 20 21  22 Part ID (Example F0 01 D8 30)\n  let partId = \"\"; //[22][23][24][25] Part ID (Example F0 01 D8 30)\n  let hexSoftwareId = \"\"; //[20][19]\n  let hexSoftwareBuild = \"\" // [22]\n  let bootloaderMode = \"\";\n  let apiVersion = false;\n\n  for(var i=0; i < 2; i++){\n    //console.log(msg[19-i]);\n    bareNum = deviceData[20-i].toString(16);\n    hexSoftwareId += hexStringFrmt.substring((bareNum).length, 2) + bareNum;\n    //console.log(softwareId);\n\n  }\n  console.log(\"Software Id: \", parseInt(hexSoftwareId, 16));\n\n  //build siftwareBuild\n  bareNum = deviceData[21].toString(10);\n  hexSoftwareBuild += hexStringFrmt.substring((bareNum).length, 2) + bareNum;\n  console.log(\"Software Build\",parseInt(hexSoftwareBuild, 16));\n  var softwareId = parseInt(hexSoftwareId, 16);\n  var softwareBuild = parseInt(hexSoftwareBuild, 16);\n\n\n  for(var i=0; i < 4; i++){\n    //console.log(msg[19-i]);\n    bareNum = deviceData[25-i].toString(16);\n    partId += hexStringFrmt.substring((bareNum).length, 2) + bareNum;\n    //console.log(softwareId);\n\n  }\n  partId = partId.toUpperCase();\n  console.log(\"Part Id: \", partId);\n  \n  //bootloader mode - 26\n  bareNum = deviceData[26].toString(10);\n  if(parseInt(hexStringFrmt.substring((bareNum).length, 2) + bareNum) == 0){\n    bootloaderMode = DEVICE_SBL_STATUS;\n  }else{\n    bootloaderMode = DEVICE_APP_STATUS;\n  };\n  console.log('Bootloader Mode: ', bareNum);\n  console.log('Bootloader Mode: ', bootloaderMode);\n\n  //api version - 29\n  bareNum = deviceData[29].toString(10);\n  apiVersion = parseInt(hexStringFrmt.substring((bareNum).length, 2) + bareNum);\n  console.log(apiVersion)\n  return { serialNumber, partId, softwareId, softwareBuild, bootloaderMode, apiVersion };\n}\n\nexport function getSerialNumber(msg){\n  let bareNum;\n  let serial_number = \"\";\n  let hexStringFrmt = \"00\"\n  for (var i = 0; i < 16; i++) {\n    if (i % 4 == 0 && i > 0) {\n      serial_number += \"-\";\n    }\n    bareNum = msg[3+i].toString(16);\n    serial_number += hexStringFrmt.substring((bareNum).length, 2) + bareNum;\n  }\n  return serial_number.toUpperCase();\n}\n\nexport function getSoftwareId(msg){\n      let hexStringFrmt = \"00\"\n      let binaryStringFrmt = \"00000000\"\n      let hexSoftwareId = \"\"; //[20][19]\n      let hexSoftwareBuild = \"\"\n      let bareNum;\n\n      for(var i=0; i < 2; i++){\n        //console.log(msg[19-i]);\n        bareNum = msg[19-i].toString(16);\n        hexSoftwareId += hexStringFrmt.substring((bareNum).length, 2) + bareNum;\n        //console.log(softwareId);\n\n      }\n      console.log(\"Software Id: \", parseInt(hexSoftwareId, 16));\n      //build siftwareBuild\n      bareNum = msg[21].toString(10);\n      hexSoftwareBuild += hexStringFrmt.substring((bareNum).length, 2) + bareNum;\n      console.log(\"Software Build\",parseInt(hexSoftwareBuild, 16));\n      var softwareId = parseInt(hexSoftwareId, 16);\n      var softwareBuild = parseInt(hexSoftwareBuild, 16);\n      return { softwareId, softwareBuild};\n}\n\nexport function checkOBDSupport(msg){\n      let hexStringFrmt = \"00\"\n      let binaryStringFrmt = \"00000000\"\n      let softwareId = \"\"; //[19][18]\n      let bareNum;\n      let OBDSupported;\n      let result = {};\n\n      for(var i=0; i < 2; i++){\n        //console.log(msg[19-i]);\n        bareNum = msg[19-i].toString(16);\n        softwareId += hexStringFrmt.substring((bareNum).length, 2) + bareNum;\n        //console.log(softwareId);\n\n      }\n      //console.log(\"Software Id\",softwareId);\n      //console.log(\"Software Id\",parseInt(softwareId,16));\n\n      //console.log(\"System Settings Byte 1\", binaryStringFrmt.substring((msg[21].toString(2)).length, 8) + msg[21].toString(2));\n      let byte_1 = binaryStringFrmt.substring((msg[21].toString(2)).length, 8) + msg[21].toString(2);\n\n\n      OBDSupported = byte_1.substring(6,7); \n      //console.log(\"OBDSupported\", OBDSupported) ;\n      if(OBDSupported == \"0\"){\n        result.isOBDSupported = true;\n        result.softwareId = parseInt(softwareId,10);\n      }else{\n        result.isOBDSupported = false;\n      }\n      return result;\n}\n\nexport function setCanFilterMessage(msg){\n  console.log(\"inside setFilter\", msg);\n  const SET_CAN_DATA_ID = 0x90;\n  let hexStringFrmt = \"00000000\"\n  let arrayMsg = [];\n\n  let result = hexStringFrmt.substring((msg).length, 8) + msg;\n  console.log(result);\n  console.log(result.match(/.{1,2}/g));\n  console.log(result.match(/.{1,2}/g).map((num)=>{return parseInt(num,16);}));\n  arrayMsg = arrayMsg.concat(\n    result.match(/.{1,2}/g).map((num)=>{return parseInt(num,16);})\n  );\n  //console.log(arrayMsg.reverse());\n  let reverseArray = arrayMsg.reverse();\n  console.log(reverseArray);\n  console.log(arrayMsg);\n  reverseArray.unshift(0x00, SET_CAN_DATA_ID);\n  console.log(reverseArray);\n  return reverseArray;\n}\n\nexport function setVehicleInfo(settings, info){\n  var vehicle_make = info.vehicle_make;\n  var vehicle_model = info.vehicle_model;\n  settings[57] = vehicle_make.length; //store vehicle make length\n  settings[58] = vehicle_model.length; // store vehicle model length\n  for (var i = 0; i < vehicle_make.length; i++) {\n    settings[29 + i] = vehicle_make.charCodeAt(i);\n  }\n  settings[29 + i] = 0; //terminate vehicle name\n\n  for (var i = 0; i < vehicle_model.length; i++) {\n    settings[43 + i] = vehicle_model.charCodeAt(i);\n  }\n  settings[43 + i] = 0; //terminate vehicle model\n\n  var vihicleMake = \"\";\n  var vihicleModel = \"\";\n  for (var i = 0; i < settings[57]; i++) {\n    vihicleMake += String.fromCharCode(settings[29+i]);\n  }\n  for (var i = 0; i < settings[58]; i++) {\n    vihicleModel += String.fromCharCode(settings[43+i]);\n  }\n  //console.log(vihicleMake);\n  //console.log(vihicleModel);\n  let result = [];\n  result[0] = 0x00;\n  result[1] = 0x1B;\n  for(var i = 0; i < 43; i++){\n    result[2 + i] =   settings[21 + i];\n  }\n  //console.log(result);\n  return result;\n}\n\nexport function setUpPacketData(update_data){\n  const SEND_PACKET_DATA = 0x04;\n  //convert number to hex string num.toString(16);\n  //then split in chunks of 2. string.match(/.{1,2}/g)\n  let doubleStringFrmt = \"0000\";\n  let hex;\n  let result = \"\"\n  let arrayMsg = [];\n  arrayMsg.push(SEND_PACKET_DATA);\n  hex = update_data.current_block.toString(16);\n  result = doubleStringFrmt.substring((hex).length, 4) + hex;\n  arrayMsg = arrayMsg.concat(\n    result.match(/.{1,2}/g).map((num)=>{return parseInt(num,16);}).reverse()\n  );\n  hex = update_data.current_packet.toString(16);\n  result = doubleStringFrmt.substring((hex).length, 4) + hex;\n  arrayMsg = arrayMsg.concat(\n    result.match(/.{1,2}/g).map((num)=>{return parseInt(num,16);}).reverse()\n  );\n  ////console.log(\"Array Data\",update_data);\n  ////console.log(\"setUpPacketData\", update_data);\n  arrayMsg = arrayMsg.concat(update_data.current_packet_data);\n  ////console.log(arrayMsg);\n  return arrayMsg;\n}\n\nexport function setUpTransferData(update_data){\n  //var blockSize = 256; //2 bytes\n  //var totalBlocks = 500; //2 bytes\n  //var packetSize = 16; //1 byte\n  //var startSector = 2; //1 byte\n  //var totalSectors = 20; //1 byte\n\n  const SETUP_DATA_TRANSFER = 0x02;\n  //convert number to hex string num.toString(16);\n  //then split in chunks of 2. string.match(/.{1,2}/g)\n  let byteStringFrmt = \"00\";\n  let doubleStringFrmt = \"0000\";\n  let hex;\n  let result = \"\"\n  let arrayMsg = [];\n  arrayMsg.push(SETUP_DATA_TRANSFER);\n  hex = update_data.block_size.toString(16);\n  result = doubleStringFrmt.substring((hex).length, 4) + hex;\n  //console.log(result);\n  //console.log(result.match(/.{1,2}/g));\n  //console.log(result.match(/.{1,2}/g).map((num)=>{return parseInt(num,16);}));\n  arrayMsg = arrayMsg.concat(\n    result.match(/.{1,2}/g).map((num)=>{return parseInt(num,16);}).reverse()\n  );\n  //console.log(arrayMsg);\n  hex = update_data.blocks_count.toString(16);\n  result = doubleStringFrmt.substring((hex).length, 4) + hex;\n  arrayMsg = arrayMsg.concat(\n    result.match(/.{1,2}/g).map((num)=>{return parseInt(num,16);}).reverse()\n  );\n  //console.log(arrayMsg);\n  arrayMsg.push(update_data.packet_size);\n  arrayMsg.push(update_data.start_sector);\n  arrayMsg.push(update_data.total_secotrs);\n  //console.log(arrayMsg);\n  return arrayMsg;\n  //ipcRenderer.send('device-write_data', arrayMsg);\n}\n\nexport function setUpBulkTransferData(update_data){\n  const SETUP_BULK_DATA_TRANSFER = 0x02;\n\n  let currentSector = update_data.current_sector;\n  console.log(currentSector);\n  let currentSectorData = update_data.sectors_data[currentSector];\n  console.log(currentSectorData);\n  let totalPages = parseInt(currentSectorData.pageEnd) - parseInt(currentSectorData.pageStart) + 1; \n  let arrayMsg = [SETUP_BULK_DATA_TRANSFER, totalPages];\n  return arrayMsg;\n\n}\n\nexport function setUpBulkSectorWrite(update_data){\n  const BULK_SECTOR_WRITE = 0x07;\n\n  let currentSector = update_data.current_sector;\n  console.log(currentSector);\n  let currentSectorData = update_data.sectors_data[currentSector];\n  console.log(currentSectorData);\n  let totalPages = parseInt(currentSectorData.pageEnd) - parseInt(currentSectorData.pageStart) + 1; \n  let arrayMsg = [BULK_SECTOR_WRITE, parseInt(currentSectorData.sectorNumber), parseInt(currentSectorData.pageStart), parseInt(currentSectorData.pageEnd)];\n  console.log(arrayMsg);\n  return arrayMsg;\n\n}\n\nexport function getBulkTransfterCheckSum(deviceData){\n  let byteStringFrmt = \"00\";\n  let hex;\n  let res;\n  let packetsum = \"\";\n  deviceData.slice(1,5).reverse().forEach((num) =>{\n    hex = num.toString(16);\n    res = byteStringFrmt.substring(hex.length, 2) + hex;\n    packetsum += res;\n  });\n  let packetSumInt = parseInt(packetsum,16);\n  console.log('getBulkTransfterCheckSum sum: ', packetSumInt);\n  return packetSumInt;\n}\nexport function getBulkWriteSectorResult(deviceData){\n  let writeResult = deviceData[1];\n  let errorCode = deviceData[2];\n  return { writeResult, errorCode };\n}\n\nexport function getInputSettings(deviceData){\n  \n    let rear_front = \"00000000\".substring((deviceData[4].toString(2)).length, 8) + deviceData[4].toString(2);\n    let left_right = \"00000000\".substring((deviceData[5].toString(2)).length, 8) + deviceData[5].toString(2);\n    let rearCamera = parseInt(rear_front.substring(4), 2).toString();\n    let frontCamera = parseInt(rear_front.substring(0,4), 2).toString();\n    let leftCamera = parseInt(left_right.substring(4), 2).toString();\n    let rightCamera = parseInt(left_right.substring(0,4), 2).toString();\n    let miscSetting = \"00000000\".substring((deviceData[7].toString(2)).length, 8) + deviceData[7].toString(2);\n    console.log(miscSetting);\n    let activationWire = miscSetting.substring(5,6);\n    let audioFeedback = miscSetting.substring(6,7);\n    let autoSwitch = miscSetting.substring(7);\n    let inputs = {rearCamera, frontCamera, leftCamera, rightCamera, autoSwitch, audioFeedback, activationWire};\n    console.log(inputs);\n    return inputs;\n    /*\n    console.log('Rear and Front: ', rf);\n    console.log('Left and Right: ', lr);\n    console.log('rear: ', rf.substring(4), parseInt(rf.substring(4), 2));\n    console.log('front: ', rf.substring(0,4), parseInt(rf.substring(0,4), 2));\n    console.log('left: ', lr.substring(4), parseInt(lr.substring(4), 2));\n    console.log('right: ', lr.substring(0,4), parseInt(lr.substring(0,4), 2));  \n    */\n}\n\nexport function prepareInputSettings(deviceData){\n  let result = [];\n  let cameraBits = \"0000\";\n  result[0] = 0x91;\n  result[1] = 0x01;\n  result[2] = 0xFF; // default for HDMI and Phone  alwas 255\n\n  \n  let rearCamera = parseInt(deviceData['rearCamera']).toString(2);\n  console.log(rearCamera);\n  let rearCameraBits = cameraBits.substring((rearCamera).length, 4) + rearCamera;\n  let frontCamera = parseInt(deviceData['frontCamera']).toString(2);\n  console.log(frontCamera);\n  let frontCameraBits = cameraBits.substring((frontCamera).length, 4) + frontCamera;\n  console.log(rearCameraBits, frontCameraBits);\n  let front_rear = frontCameraBits + rearCameraBits;\n  console.log (front_rear, parseInt(front_rear,2));\n  result[3] = parseInt(front_rear,2);\n \n  let leftCamera = parseInt(deviceData['leftCamera']).toString(2);\n  console.log(leftCamera);\n  let leftCameraBits = cameraBits.substring((leftCamera).length, 4) + leftCamera;\n  let rightCamera = parseInt(deviceData['rightCamera']).toString(2);\n  console.log(rightCamera);\n  let rightCameraBits = cameraBits.substring((rightCamera).length, 4) + rightCamera;\n  console.log(leftCameraBits, rightCameraBits);\n  let right_left = rightCameraBits + leftCameraBits;\n  console.log (right_left, parseInt(right_left,2));\n  result[4] = parseInt(right_left,2);\n\n  result[5] = 0xFF; //reserved\n\n  let miscSetting = \"11111\" + deviceData['activationWire'] + deviceData['audioFeedback'] + deviceData['autoSwitch'];\n  console.log('miscSetting:', miscSetting);\n  result[6] = parseInt(miscSetting,2); //temp to test\n\n\n  return result;\n}\n\nexport function parseTransferDataResponse(data){\n  //var block_size - 2 bytes\n  //var total_blocks - 2 bytes\n  //var packet_size - 1 byte\n  //var start_sector - 1 byte\n  //var total_secotrs - 1 byte\n\n  var data_setup_response = JSON.parse(JSON.stringify(TRANSFER_SET_UP_DATA_RESPONSE));\n  //convert number to hex string num.toString(16);\n  //then split in chunks of 2. string.match(/.{1,2}/g)\n  let byteStringFrmt = \"00\";\n  let doubleStringFrmt = \"0000\";\n  let hex;\n  let res;\n  var block_size = \"\";\n  var total_blocks = \"\";\n  data.slice(1,3).reverse().forEach((num) =>{\n                hex = num.toString(16);\n                res = byteStringFrmt.substring(hex.length, 2) + hex;\n                block_size += res;\n  });\n  data_setup_response.block_size = parseInt(block_size,16);\n\n  data.slice(3,5).reverse().forEach((num) =>{\n                hex = num.toString(16);\n                res = byteStringFrmt.substring(hex.length, 2) + hex;\n                total_blocks += res;\n  });\n\n  data_setup_response.blocks_count = parseInt(total_blocks,16);\n  data_setup_response.packet_size = data.slice(5,6)[0];\n  data_setup_response.start_sector = data.slice(6,7)[0];\n  data_setup_response.total_secotrs = data.slice(7,8)[0];\n  return data_setup_response;\n\n}\n\nexport function parsePacketDataResponse(data){\n  //var block_number - 2 bytes\n  //var packet_number - 2 bytes\n  //var remaining_packets - 1 byte\n\n\n  var data_packet_response = JSON.parse(JSON.stringify(TRANSFER_STATUS_DATA_RESPONSE));\n  //convert number to hex string num.toString(16);\n  //then split in chunks of 2. string.match(/.{1,2}/g)\n  let byteStringFrmt = \"00\";\n  let doubleStringFrmt = \"0000\";\n  let hex;\n  let res;\n  var block_number = \"\";\n  var packet_number = \"\";\n  var remaining_packets = \"\";\n  var check_sum = \"\";\n  data.slice(1,3).reverse().forEach((num) =>{\n                hex = num.toString(16);\n                res = byteStringFrmt.substring(hex.length, 2) + hex;\n                block_number += res;\n  });\n  data_packet_response.block_number = parseInt(block_number,16);\n\n  data.slice(3,5).reverse().forEach((num) =>{\n                hex = num.toString(16);\n                res = byteStringFrmt.substring(hex.length, 2) + hex;\n                packet_number += res;\n  });\n  data_packet_response.packet_number = parseInt(packet_number,16);\n\n  data.slice(5,7).reverse().forEach((num) =>{\n                hex = num.toString(16);\n                res = byteStringFrmt.substring(hex.length, 2) + hex;\n                remaining_packets += res;\n  });\n  data_packet_response.remaining_packets = parseInt(remaining_packets,16);\n\n  if(data_packet_response.remaining_packets == 0){\n    data.slice(7,11).reverse().forEach((num) =>{\n                  hex = num.toString(16);\n                  res = byteStringFrmt.substring(hex.length, 2) + hex;\n                  check_sum += res;\n    });\n    data_packet_response.check_sum = parseInt(check_sum,16);\n  }else{\n    data_packet_response.check_sum = 0;\n  }\n\n  return data_packet_response;\n\n}\n\nexport function parseSectorWriteResponse(data){\n  let byteStringFrmt = \"00\";\n  let doubleStringFrmt = \"0000\";\n  let hex;\n  let res;\n  var write_response = \"\";\n  data.slice(1,3).reverse().forEach((num) =>{\n                hex = num.toString(16);\n                res = byteStringFrmt.substring(hex.length, 2) + hex;\n                write_response += res;\n  });\n  return parseInt(write_response,16);\n}\n\nexport function setUpTransferStart(){\n  let arrayMsg = [];\n  const SETUP_TRANSFER_START = 0x03;\n  arrayMsg.push(SETUP_TRANSFER_START);\n  return arrayMsg;\n}\n\nexport function setUpBlockValidateData(){\n  let arrayMsg = [];\n  const SETUP_BLOCK_VALIDATE = 0x05;\n  arrayMsg.push(SETUP_BLOCK_VALIDATE);\n  return arrayMsg;\n}\n\nexport function setUpSectorWriteData(data){\n  let arrayMsg = [];\n  const SETUP_SECTOR_WRITE = 0x07;\n  arrayMsg.push(SETUP_SECTOR_WRITE, data.current_sector);\n  console.log(\"SETUP_SECTOR_WRITE\", arrayMsg);\n  return arrayMsg;\n}\n\nexport function parseOBDStatus(msg){\n  console.log(msg);\n  var obdReadStatus;\n  var obdStatus;\n  obdReadStatus = msg[1];\n  obdStatus = msg[2];\n  console.log(msg[1]);\n  console.log(msg[2]);\n  return { obdReadStatus, obdStatus};\n}\n\n","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/utils/structures.js",[],"/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/reducers/reducer_device_settings.js",["169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184"],"import { SYSTEM_SETTINGS } from '../utils/structures';\nimport { DEVICE_DATA_MCU, \n         DEVICE_DATA_SETTINGS, \n         DEVICE_DATA_INPUT_SETTINGS,\n         DEVICE_REMOVED,\n         DEVICE_NOT_SUPPORTED,\n         FETCH_DEVICE_DB_DATA,\n         UPDATE_SYSTEM_SETTINGS,\n         SET_SOFTWARE_DESCRIPTION } from '../utils/constants';\n\nimport {  getDeviceData,\n          getInputSettings } from '../utils/device_utils';\n\nexport default function(state = JSON.parse(JSON.stringify(SYSTEM_SETTINGS)), action){\n  let new_state = {};\n  let tmp_state = {};\n  let deviceData;\n  switch (action.type){\n    case DEVICE_DATA_MCU:\n        tmp_state = JSON.parse(JSON.stringify(state));\n        deviceData = action.payload;\n        //let deviceSettings = getDeviceData(deviceData);\n        console.log('in reducer DEVICE_DATA_MCU');\n        console.log(deviceData);\n        new_state = Object.assign({}, tmp_state, deviceData);\n        console.log(new_state);\n        return new_state;\n    case DEVICE_DATA_INPUT_SETTINGS:\n      tmp_state = JSON.parse(JSON.stringify(state));\n      deviceData = action.payload;\n      let inputSettings = getInputSettings(deviceData);\n      console.log('in reducer DEVICE_DATA_INPUT_SETTINGS');\n      console.log(inputSettings);\n      new_state = Object.assign({}, tmp_state, inputSettings);\n      console.log(new_state);\n      return new_state;\n    case FETCH_DEVICE_DB_DATA:\n      tmp_state = JSON.parse(JSON.stringify(state));\n      deviceData = action.payload;\n      console.log('in reducer FETCH_DEVICE_DB_DATA');\n      new_state = Object.assign({}, tmp_state, deviceData);\n      console.log(new_state);\n      return new_state;\n    case SET_SOFTWARE_DESCRIPTION:\n      tmp_state = JSON.parse(JSON.stringify(state));\n      deviceData = action.payload;\n      console.log('in reducer SET_SOFTWARE_DESCRIPTION');\n      new_state = Object.assign({}, tmp_state, deviceData);\n      console.log(new_state);\n    case UPDATE_SYSTEM_SETTINGS:   \n      tmp_state = JSON.parse(JSON.stringify(state));\n      console.log('in reducer UPDATE_SYSTEM_SETTINGS');\n      console.log(action.payload);\n      new_state = Object.assign({}, tmp_state, action.payload);\n      console.log(new_state);\n      return new_state;   \n    case DEVICE_DATA_SETTINGS:\n      //return state.concat([ action.payload.data ]);\n      //or (same crete new array). NEVER!!!!! mutate array\n      //console.log('Action recieved', DEVICE_DATA_SETTINGS);\n      //console.log(action.payload);\n\n       console.log('reducer_device_settings');\n\n      let msg = action.payload;\n      let zaction = msg[0];\n      let usbResult = msg[1];\n      let serial_number = \"\"\n      let hexStringFrmt = \"00\"\n      let binaryStringFrmt = \"00000000\"\n      let softwareId = \"\"; //[19][18]\n      let softwareBuild = \"\"; //[20]\n      let bareNum;\n      for (var i = 0; i < 16; i++) {\n        if (i % 4 == 0 && i > 0) {\n          serial_number += \"-\";\n        }\n        bareNum = msg[2+i].toString(16);\n        serial_number += hexStringFrmt.substring((bareNum).length, 2) + bareNum;\n      }\n      serial_number = serial_number.toUpperCase();\n      //console.log(\"Serial Number\",serial_number);\n      //build software id (reverse 2 bytes)\n      //for(var i=0; i < 2; i++){\n      //  bareNum = msg[19-i].toString(10);\n      //  softwareId += hexStringFrmt.substring((bareNum).length, 2) + bareNum;\n\n      //}\n      for(var i=0; i < 2; i++){\n        //console.log(msg[19-i]);\n        bareNum = msg[19-i].toString(16);\n        softwareId += hexStringFrmt.substring((bareNum).length, 2) + bareNum;\n        //console.log(softwareId);\n\n      }\n      //console.log(\"Software Id\",softwareId);\n      //console.log(\"Software Id\",parseInt(softwareId,16));\n      //build siftwareBuild\n      bareNum = msg[20].toString(10);\n      softwareBuild += hexStringFrmt.substring((bareNum).length, 2) + bareNum;\n      //console.log(\"Software Build\",softwareBuild);\n\n      //get system settings\n      let system_settings = JSON.parse(JSON.stringify(SYSTEM_SETTINGS));\n      //console.log(\"System Settings Byte 1\", binaryStringFrmt.substring((msg[21].toString(2)).length, 8) + msg[21].toString(2));\n      let byte_1 = binaryStringFrmt.substring((msg[21].toString(2)).length, 8) + msg[21].toString(2);\n      //console.log(\"System Settings Byte 2\", binaryStringFrmt.substring((msg[22].toString(2)).length, 8) + msg[22].toString(2));\n      let byte_2 = binaryStringFrmt.substring((msg[22].toString(2)).length, 8) + msg[22].toString(2);\n      //console.log(\"System Settings Byte 3\", binaryStringFrmt.substring((msg[23].toString(2)).length, 8) + msg[23].toString(2));\n      let byte_3 = binaryStringFrmt.substring((msg[23].toString(2)).length, 8) + msg[23].toString(2);\n      //console.log(\"System Settings Byte 4\", binaryStringFrmt.substring((msg[24].toString(2)).length, 8) + msg[24].toString(2));\n      let byte_4 = binaryStringFrmt.substring((msg[24].toString(2)).length, 8) + msg[24].toString(2);\n      //console.log(\"System Settings Byte 5\", binaryStringFrmt.substring((msg[25].toString(2)).length, 8) + msg[25].toString(2));\n      let byte_5 = binaryStringFrmt.substring((msg[25].toString(2)).length, 8) + msg[25].toString(2);\n      //console.log(\"System Settings Byte 6\", binaryStringFrmt.substring((msg[26].toString(2)).length, 8) + msg[26].toString(2));\n      let byte_6 = binaryStringFrmt.substring((msg[26].toString(2)).length, 8) + msg[26].toString(2);\n      //console.log(\"System Settings Byte 7\", binaryStringFrmt.substring((msg[27].toString(2)).length, 8) + msg[27].toString(2));\n      let byte_7 = binaryStringFrmt.substring((msg[27].toString(2)).length, 8) + msg[27].toString(2);\n      //console.log(\"System Settings Byte 8\", binaryStringFrmt.substring((msg[28].toString(2)).length, 8) + msg[28].toString(2));\n      let byte_8 = binaryStringFrmt.substring((msg[28].toString(2)).length, 8) + msg[28].toString(2);\n\n      console.log('Settings reducer XXXXXXXXXXXXXXXX');\n      //byte 1\n      system_settings[\"SoundSupported\"] = byte_1.substring(7,8);\n      system_settings[\"ObdSupported\"] = byte_1.substring(6,7);\n      system_settings[\"ConfigSupported\"] = byte_1.substring(5,6);\n      system_settings[\"RearCameraSupported\"] = byte_1.substring(4,5);\n      system_settings[\"FrontCameraSupported\"] = byte_1.substring(3,4);\n      system_settings[\"LeftCameraSupported\"] = byte_1.substring(2,3);\n      system_settings[\"RightCameraSupported\"] = byte_1.substring(1,2);\n      system_settings[\"ReservedSupported\"] = byte_1.substring(0,1);\n      //byte_2\n      system_settings[\"SoundEnabled\"] = byte_2.substring(7,8);\n      system_settings[\"RearCameraEnabled\"] = byte_2.substring(6,7);\n      system_settings[\"FrontCameraEnabled\"] = byte_2.substring(5,6);\n      system_settings[\"LeftCameraEnabled\"] = byte_2.substring(4,5);\n      system_settings[\"RightCameraEnabled\"] = byte_2.substring(3,4);\n      system_settings[\"FactoryRearCamera\"] = byte_2.substring(2,3);\n      system_settings[\"FactoryFrontCamera\"] = byte_2.substring(1,2);\n      system_settings[\"FactoryLeftCamera\"] = byte_2.substring(0,1);\n      //byte_3;\n      system_settings[\"HDMIEnabled\"] = byte_3.substring(7,8);\n      system_settings[\"RGBEnabled\"] = byte_3.substring(6,7);\n      system_settings[\"Input1Enabled\"] = byte_3.substring(5,6);\n      system_settings[\"Input2Enabled\"] = byte_3.substring(4,5);\n      system_settings[\"Input3Enabled\"] = byte_3.substring(3,4);\n      system_settings[\"Input4Enabled\"] = byte_3.substring(2,3);\n      system_settings[\"NotUsed\"] = byte_3.substring(0,2);\n      //byte_4;\n      system_settings[\"FactoryRightCamera\"] = byte_4.substring(7,8);\n      system_settings[\"FrontCameraMode\"] = byte_4.substring(5,7);\n      system_settings[\"SideCameraMode\"] = byte_4.substring(2,5);\n      system_settings[\"ResrvedBits\"] = byte_4.substring(0,2);\n      //byte 5\n      system_settings[\"IsDefaultSettings\"] = byte_5.substring(7,8);\n      system_settings[\"VideoInputs\"] = byte_5.substring(4,7);\n      system_settings[\"VIMCapacity\"] = byte_5.substring(3,4);\n      system_settings[\"RGBCapacity\"] = byte_5.substring(2,3);\n      system_settings[\"HDMICapacity\"] = byte_5.substring(1,2);\n      system_settings[\"ParkingLinesDisabled\"] = byte_5.substring(0,1);\n      //byte 6\n      system_settings[\"ScreenSize\"] = byte_6.substring(4,8);\n      system_settings[\"CSyncPolarity\"] = byte_6.substring(2,4);\n      system_settings[\"SOGEnabled\"] = byte_6.substring(1,2);\n      system_settings[\"VIMEnabled\"] = byte_6.substring(0,1);\n      //byte 7\n      system_settings[\"VideoSize1\"] = byte_7.substring(6,8);\n      system_settings[\"VideoSize2\"] = byte_7.substring(4,6);\n      system_settings[\"VideoSize3\"] = byte_7.substring(2,4);\n      system_settings[\"VideoSize4\"] = byte_7.substring(0,2);\n      //byte 8\n      system_settings[\"VideoFunction1\"] = byte_8.substring(6,8);\n      system_settings[\"VideoFunction2\"] = byte_8.substring(4,6);\n      system_settings[\"VideoFunction3\"] = byte_8.substring(2,4);\n      system_settings[\"VideoFunction4\"] = byte_8.substring(0,2);\n\n      console.log(\"SYSTEM SETTINGS: \", system_settings);\n\n      var vihicleMake = \"\";\n      var vihicleModel = \"\";\n      for (var i = 0; i < msg[57]; i++) {\n        vihicleMake += String.fromCharCode(msg[29+i]);\n      }\n      for (var i = 0; i < msg[58]; i++) {\n        vihicleModel += String.fromCharCode(msg[43+i]);\n      }\n      //console.log(vihicleMake);\n      //console.log(vihicleModel);\n      for (var i = 0; i < 14; i++) {\n        //console.log(vihicleModel.charCodeAt(i));\n      }\n      return system_settings;\n\n    case DEVICE_REMOVED:\n      return JSON.parse(JSON.stringify(SYSTEM_SETTINGS));\n    case DEVICE_NOT_SUPPORTED:\n      return JSON.parse(JSON.stringify(SYSTEM_SETTINGS));\n  }\n  return state;\n}\n","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/actions/hid_actions.js",["185","186","187","188","189","190","191","192"],"/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/containers/device.js",["193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231"],"import React, { Component} from 'react';\nimport { Tab, Modal, Header, Progress, Button } from 'semantic-ui-react'\nimport $ from 'jquery';\nimport { connect} from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport DeviceInfo from  '../containers/device_info'\nimport SoftwareSearch from '../containers/software_search';\nimport InputSettings from '../containers/input_settings';\nimport MiscSettings from '../containers/misc_settings';\nimport { loadFTPFile } from '../actions/ftp_actions';\nimport {  handleDeviceDataResult,\n          sendSoftwareUpdateData,\n          sendBulkUpdateData,\n          handleDeviceRemoved,\n          saveSystemConfig,\n          handleUpdateError,\n          handleUpdateSuccess,\n          setSystemSetting } from '../actions/hid_actions';\n\nimport { fetchSoftware } from '../actions/get_software';\nimport { updateDeviceDBData } from '../actions/get_device_data';\nimport { hideDialog } from '../actions/misc_actions';\n\n\nimport {  NO_DEVICE_STATUS,\n          FTP_LOAD_SUCCESS,\n          SET_UP_BULK_TRANSFER,\n          START_BULK_TRANSFER,\n          BULK_SECTOR_WRITE,\n          PACKET_SEND,\n          BLOCK_VALIDATE,\n          SECTOR_WRITE,\n          TRANSFER_COMPLETED,\n          UPDATE_IN_PROGRESS,\n          UPDATE_NOT_STARTED,\n          UPDATE_ERROR} from '../utils/constants'; \n\nlet devices = [];\nlet j = 0;\n\nasync function getDevices(){\n  devices = await navigator.hid.getDevices();\n  console.log(devices);\n  console.log('after getDevices');\n}\n\nclass Device extends Component {\n  constructor(props){\n    super(props);\n    this.state = {device_update_status: UPDATE_NOT_STARTED,  tabActiveIndex: 0  }\n    this.connectToDevice = this.connectToDevice.bind(this);\n    this.saveInputConfig = this.saveInputConfig.bind(this);  \n    this.readDeviceSettings = this.readDeviceSettings.bind(this);\n    this.readInputConfig = this.readInputConfig.bind(this);\n    this.installSoftware = this.installSoftware.bind(this);\n\n    this.closeModal = this.closeModal.bind(this);\n    this.displayModal = this.displayModal.bind(this);\n\n    this.selectTab = this.selectTab.bind(this);\n    this.handleTabChange = this.handleTabChange.bind(this);\n\n    //this.renderSteps = this.renderSteps.bind(this);\n    this.renderTabs = this.renderTabs.bind(this);\n\n    console.log('constructor')\n  }\n\n  renderSteps(){\n    if( this.props.system_settings.bootloaderMode == NO_DEVICE_STATUS){\n      return(\n        <div><br /><br /><br /><br /></div>\n      );\n    }else{\n      return(\n        <div className=\"ui grid\">\n          <div className=\"sixteen wide column center aligned\">\n            <div className=\"ui tiny steps\">\n              <a className=\"tiny step\" onClick={() => this.selectTab(0)}>\n                <div className=\"ui red horizontal label\">Step 1</div>\n                Install Software\n              </a>\n              <a className=\"tiny step\" onClick={() => this.selectTab(1)}>\n                  <div className=\"ui red horizontal label\">Step 2</div>\n                  Configure Video Input Settings\n              </a>\n              <a className=\"tiny step\" onClick={() => this.selectTab(2)}>\n                  <div className=\"ui red horizontal label\">Step 3</div>\n                  Configure Device Settings (Optional)\n              </a>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n\n  renderTabs(){\n    if( this.props.system_settings.bootloaderMode == NO_DEVICE_STATUS){\n      return(\n        <div></div>\n      );\n    }else{\n\n      let panes = [\n        { menuItem: 'Vehicle Search', pane: { key: 'tab1', content: <SoftwareSearch \n                                                                          onInstallClick={this.installSoftware}/>, size: 'massive' } },\n        { menuItem: 'Video Input Settings', pane: { key: 'tab2', content: <InputSettings \n                                                                          onDeviceSettingsSave={this.saveInputConfig}\n                                                                          onResetSettings={this.readInputConfig}/>, size: 'massive' } },\n        { menuItem: 'Device Settings', pane: { key: 'tab3', content: <MiscSettings \n                                                                          onDeviceSettingsSave={this.saveInputConfig}\n                                                                          onResetSettings={this.readInputConfig}/>, size: 'massive' } }\n      ];\n      return(\n        <Tab \n          panes={panes} \n          renderActiveOnly = {false} \n          activeIndex={this.state.tabActiveIndex}\n          onTabChange={this.handleTabChange}\n        />\n      );\n    }\n  }\n\n  handleTabChange({activeIndex}){\n    console.log('selectTab:', activeIndex);\n    this.setState({tabActiveIndex: activeIndex});\n  }\n\n  selectTab(tabIndex){\n    console.log('selectTab:', tabIndex);\n    this.setState({tabActiveIndex: tabIndex});\n  }\n\n  componentDidMount(){\n    if(navigator != undefined){\n      navigator.hid.addEventListener('connect', ({device}) => {\n        console.log(`componentDidMount HID connected: ${device.productName}`);\n        getDevices();\n        if(devices[0] != undefined){\n          this.connectToDevice();\n        }\n      });\n        \n      navigator.hid.addEventListener('disconnect', ({device}) => {\n          console.log(`HID disconnected: ${device.productName}`);\n          this.setState({device_update_status: UPDATE_NOT_STARTED});\n          this.props.handleDeviceRemoved();\n      });\n    }\n  }\n\n \n  async connectToDevice() {\n      console.log('connectToDevice');\n      console.log(devices)\n      \n      if(devices[0] == undefined){\n        devices = await navigator.hid.requestDevice({filters:[\n          {\n              //vendorId: 0xc251,\n              //productId: 0x0116,\n              vendorId: 0x1FC9,\n              productId: 0x0081\n            },\n        ]});\n      }\n\n      if(devices.length > 0){\n        console.log(devices.length > 0);\n        console.log(devices);\n        console.log(devices[0].opened);  \n        console.log(navigator.hid.getDevices());\n      }else{\n        console.log('No device selected');\n        return;\n      }\n\n\n      if (devices[0].opened == true){\n        console.log('device already opened');\n        //devices[0].sendReport(0x00, new Uint8Array([0x90, 0x00, 0x00, 0x00, 0x00, 0x00]));\n        return;\n      }\n  \n      await devices[0].open();\n        if (devices[0].opened){  \n          console.log(\"Device is open.\");\n          this.readDeviceSettings();\n          setTimeout(this.readInputConfig,100);\n          //this.readInputConfig();\n        }else{  \n          console.log(\"Device not open.\");  \n        }\n        devices[0].oninputreport = e => {  \n          console.log(\"###########myFunction Got input report from \" + e.device.productName + \" with ID \" + e.reportId);\n          let dataArray = new Uint8Array(e.data.buffer)\n          console.log(dataArray);\n          this.props.handleDeviceDataResult(dataArray);\n        }\n        \n  }\n\n  saveInputConfig(){\n    console.log('saving settings');\n    this.props.saveSystemConfig(this.props.system_settings, devices[0]);\n  }\n\n  async readDeviceSettings() {\n    //console.log('readDeviceSettings', devices[0]);\n    //let tmpArray = [];\n    devices[0].sendReport(0x00, new Uint8Array([0x90, 0x00, 0x00, 0x00, 0x00, 0x00]));\n  }\n\n  async readInputConfig() {\n    //console.log('readInputConfig', devices[0]);\n    //let tmpArray = [];\n    devices[0].sendReport(0x00, new Uint8Array([0x90, 0x01, 0x00, 0x00, 0x00, 0x00]));\n  }\n\n  installSoftware(){\n    console.log('loadftp'); \n    var sw_id = this.props.software_search.sw_id;\n    if(this.props.software_search.sw_id.length == 0) {\n      alert(\"Please select software from the list\");\n    }else{\n      console.log(sw_id);\n      this.props.loadFTPFile(sw_id);     \n    } \n  }\n\n  displayModal(update_status){\n    console.log('icon:',this.props.messages);\n    return(\n      <div>\n        {/* Progress Modal */}\n        <Modal\n          open={this.state.device_update_status != UPDATE_NOT_STARTED} \n          size=\"large\">\n          <Header content='Update In Progress' />\n          <Modal.Content>\n            <p>\n              <Progress percent={this.props.software_update.progress_percent} progress indicating autoSuccess />\n            </p>\n          </Modal.Content>\n        </Modal>\n        {/* Message Modal */}\n        <Modal\n          open={this.props.messages.open_modal} \n          size=\"large\">\n          <Header content={this.props.messages.message_header}  />\n          <Modal.Content>\n            <p> \n              <i className={`large ${this.props.messages.message_icon} icon`} />\n              {this.props.messages.message_text}\n            </p>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button id={this.props.messages.id} color='green' onClick={() => this.closeModal()}>\n              Ok\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </div>\n    );\n  }\n\n  closeModal(){\n    console.log(\"close modal function\");\n    this.props.hideDialog();\n  }\n\n  componentDidUpdate(prevProps){\n    console.log(this.state.device_update_status);\n    console.log(this.props.software_update.update_progress_status);\n    if(this.state.device_update_status == UPDATE_NOT_STARTED && this.props.software_update.update_progress_status == FTP_LOAD_SUCCESS){\n      if(this.props.software_update.update_progress_status != prevProps.software_update.update_progress_status){\n        console.log(\"+++++++ componentDidUpdate SET_UP_BULK_TRANSFER  ++++++\");\n        this.setState({device_update_status: UPDATE_IN_PROGRESS});\n        this.props.sendSoftwareUpdateData(SET_UP_BULK_TRANSFER,this.props.software_update, devices[0]);\n      }\n    }\n    else if(this.state.device_update_status == UPDATE_IN_PROGRESS && this.props.software_update.update_progress_status == START_BULK_TRANSFER){\n      if(this.props.software_update.update_progress_status != prevProps.software_update.update_progress_status){\n        console.log(\"+++++++ componentDidUpdate START_BULK_TRANSFER  ++++++\");\n        this.props.sendBulkUpdateData(START_BULK_TRANSFER, this.props.software_update, devices[0]);\n      }\n    }\n    else if(this.state.device_update_status == UPDATE_IN_PROGRESS && this.props.software_update.update_progress_status == SET_UP_BULK_TRANSFER){\n      if(this.props.software_update.update_progress_status != prevProps.software_update.update_progress_status){\n        console.log(\"+++++++ componentDidUpdate SET_UP_BULK_TRANSFER FOR NEXT SECTOR  ++++++\");\n        this.props.sendSoftwareUpdateData(SET_UP_BULK_TRANSFER,this.props.software_update, devices[0]);\n      }\n    }\n    else if(this.state.device_update_status == UPDATE_IN_PROGRESS && this.props.software_update.update_progress_status == BULK_SECTOR_WRITE){\n      if(this.props.software_update.update_progress_status != prevProps.software_update.update_progress_status){\n        console.log(\"++++++++ componentDidUpdate BULK_SECTOR_WRITE  ++++++++++\");\n        this.props.sendSoftwareUpdateData(BULK_SECTOR_WRITE, this.props.software_update, devices[0]);\n      }\n    }\n    else if(this.state.device_update_status == UPDATE_IN_PROGRESS && this.props.software_update.update_progress_status == PACKET_SEND){\n      if(this.props.software_update.update_progress_status != prevProps.software_update.update_progress_status){\n        console.log(\"Will start packet send\", this.propssoftware_update);\n        this.props.sendSoftwareUpdateData(PACKET_SEND, this.props.software_update, devices[0]);\n      }\n    }\n    else if(this.state.device_update_status == UPDATE_IN_PROGRESS && this.props.software_update.update_progress_status == BLOCK_VALIDATE){\n      if(this.props.software_update.update_progress_status != prevProps.software_update.update_progress_status){\n        console.log(\"Will validate block\", this.props.software_update);\n        this.props.sendSoftwareUpdateData(BLOCK_VALIDATE, this.props.software_update, devices[0]);\n      }\n    }\n    else if(this.state.device_update_status == UPDATE_IN_PROGRESS && this.props.software_update.update_progress_status == SECTOR_WRITE){\n      if(this.props.software_update.update_progress_status != prevProps.software_update.update_progress_status){\n        console.log(\"Will write sector\", this.props.software_update);\n        this.props.sendSoftwareUpdateData(SECTOR_WRITE, this.props.software_update, devices[0]);\n      }\n    }\n    else if(this.state.device_update_status == UPDATE_IN_PROGRESS && this.props.software_update.update_progress_status == TRANSFER_COMPLETED){\n      console.log(\"Transfer complete in device\", this.props.software_update, this.props.system_settings);\n      this.props.updateDeviceDBData(this.props.system_settings.serialNumber, this.props.software_update);\n      console.log(\"Transfer complete success message\");\n      this.props.handleUpdateSuccess();\n      this.setState({device_update_status: UPDATE_NOT_STARTED});\n    }\n    else if(this.state.device_update_status == UPDATE_IN_PROGRESS && this.props.software_update.update_progress_status == UPDATE_ERROR){\n      if(this.props.software_update.update_progress_status != prevProps.software_update.update_progress_status){\n        console.log(\"###################Update Error\", this.props.software_update, this.props.system_settings);\n        this.props.handleUpdateError();\n        this.setState({device_update_status: UPDATE_NOT_STARTED});\n      }\n    }\n\n  }\n\n  render(){\n    return (\n        <div class=\"ui container\">\n          {this.renderSteps()}\n          <DeviceInfo \n            deviceSettings = {this.props.system_settings}\n            onDeviceSearch={this.connectToDevice}\n            onSelectTab={this.selectTab}\n          />\n          <br /><br />\n          {this.renderTabs()}\n          {this.displayModal()}\n        </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state){\n  return { \n           system_settings: state.system_settings,\n           software_update: state.software_update,\n           software_search: state.software_search,\n           messages: state.messages\n         };\n}\n\nfunction mapDispatchToProps(dispatch){\n  return bindActionCreators({ loadFTPFile, handleDeviceDataResult, sendSoftwareUpdateData, sendBulkUpdateData,handleDeviceRemoved, setSystemSetting, saveSystemConfig, fetchSoftware, updateDeviceDBData, handleUpdateError, handleUpdateSuccess, hideDialog }, dispatch);\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Device);\n","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/reducers/reducer_sofrtware_update.js",["232","233","234","235","236"],"/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/containers/device_info.js",["237","238","239","240","241","242","243","244","245"],"import React, { Component} from 'react';\n\n\nimport { NO_DEVICE_STATUS, DEVICE_APP_STATUS, DEVICE_SBL_STATUS} from '../utils/constants';\n\nvar iconColor = '';\n\nexport default class DeviceInfo extends Component {\n\n  constructor(props){\n    super(props);\n\n    this.renderDeviceStatus = this.renderDeviceStatus.bind(this);\n    this.renderDeviceIcon = this.renderDeviceIcon.bind(this);\n    this.renderDevice = this.renderDevice.bind(this);\n\n    this.renderDeviceInfo = this.renderDeviceInfo.bind(this);\n    this.renderSearchDevice = this.renderSearchDevice.bind(this);\n    this.renderSoftwareVersion = this.renderSoftwareVersion.bind(this);\n    this.renderMCU = this.renderMCU.bind(this);\n    this.createCopyButton = this.createCopyButton.bind(this);\n  }\n\n\n  componentDidMount(){\n    //const clipboard = new Clipboard('.mcu')\n  }\n\n  renderDeviceIcon(){\n    iconColor = \"white\";\n    if(this.props.deviceSettings.bootloaderMode == DEVICE_APP_STATUS){\n      iconColor = \"blue\";\n    }else if (this.props.deviceSettings.bootloaderMode == DEVICE_SBL_STATUS) {\n      iconColor = \"red\";\n    }\n    return (\n        <div className=\"two wide column\">\n            <i className={`huge ${iconColor} desktop icon`}></i>\n            { this.renderDeviceStatus() }\n        </div>\n    );\n}\n\n  renderDeviceStatus(){\n      var deviceStatus = \"DEVICE NOT CONNECTED\";\n      if(this.props.deviceSettings.bootloaderMode == DEVICE_APP_STATUS){\n        deviceStatus = \"APPLICATION MODE\";\n      }else if (this.props.deviceSettings.bootloaderMode == DEVICE_SBL_STATUS) {\n        deviceStatus = \"UPDATE MODE\";\n      }\n      return (\n          <div className=\"row\">\n            {deviceStatus}\n          </div>\n      );\n  }\n\n  renderDevice(){\n    if(this.props.deviceSettings.bootloaderMode == NO_DEVICE_STATUS){\n      return this.renderSearchDevice();\n    }else{\n      return this.renderDeviceInfo();\n    }\n  }\n\n  renderSearchDevice(){\n    return(\n        <div className=\"fourteen wide column\">\n            <button onClick={this.props.onDeviceSearch} className=\"ui primary button\">CLICK HERE TO CONNECT DEVICE TO COMPUTER</button>\n        </div>\n    );\n  }\n\n  renderDeviceInfo(){\n    return(\n      <div className=\"fourteen wide column left aligned \">\n          <div className=\"row\">\n              <div className={`ui ${iconColor} horizontal label`}>Vehicle Make:</div>{this.props.deviceSettings.carMake}\n          </div>\n          <div>&nbsp;</div>\n          <div className=\"row\">\n              <div className={`ui ${iconColor} horizontal label`}>Vehicle Model:</div>{this.props.deviceSettings.carModel}\n          </div>\n          <div>&nbsp;</div>\n          <div className=\"row\">\n              <div className={`ui ${iconColor} horizontal label`}>Vehicle Years:</div>{this.props.deviceSettings.softwareYears}\n          </div>\n          <div>&nbsp;</div>\n          <div className=\"row\">\n              <div className={`ui ${iconColor} horizontal label`}>Software Description:</div>{this.props.deviceSettings.softwareDescription}\n              <br /><br/>\n          </div>\n          <div className=\"row\">\n              <div className={`ui ${iconColor} horizontal label`}>Device Model:</div>{this.props.deviceSettings.mfgId}\n              {this.renderSoftwareVersion()}\n              {this.renderMCU()}\n          </div>            \n      </div>\n    );\n}\n\n\n  renderSoftwareVersion(){\n    console.log(\"renderSoftwareVersion\")\n    console.log(this.props.deviceSettings)\n      if(this.props.deviceSettings.bootloaderMode != NO_DEVICE_STATUS){\n        return (\n          <span>\n            &nbsp;&nbsp;Software: {this.props.deviceSettings.softwareId}.{this.props.deviceSettings.softwareBuild}\n          </span>\n        );\n      }else{\n        return(\n          <span />\n        );\n      }\n  }\n\n  renderMCU(){\n    console.log(\"renderMCU\")\n    console.log(this.props.deviceSettings)\n      if(this.props.deviceSettings.bootloaderMode != NO_DEVICE_STATUS){\n        return (\n          <span>\n            &nbsp;&nbsp;MCU: {this.props.deviceSettings.serialNumber}\n          </span>\n        );\n      }else{\n        return(\n          <span />\n        );\n      }   \n  }\n\n  createCopyButton(){\n       if(this.props.deviceStatus.app_status == DEVICE_APP_STATUS){\n        return (\n          <button className=\"mcu\" data-clipboard-text={this.props.deviceInfo.mcu_serial}>\n               <i className=\"copy icon\"></i>CLICK HERE TO COPY SERIAL NUMBER\n          </button>\n        );\n      }else if (this.props.deviceStatus.app_status == DEVICE_SBL_STATUS) {\n        return(\n          <span />\n        );\n      }      \n  }\n\n  render(){\n    return (\n        <div>\n            <div className=\"ui center aligned page grid\">\n              <div className=\"sixteen column row\">\n                { this.renderDeviceIcon() }\n                { this.renderDevice() }\n              </div>\n            </div>\n        </div>\n    );\n  }\n}","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/actions/get_device_data.js",["246","247","248","249","250","251","252"],"import axios from 'axios';\n/*\nimport { fetchMake } from './get_make';\nimport { clearSBL } from './hid_action';\nimport { fetchOBDConfig} from './get_obdconfig'\n*/\nimport { WEB_SERVICES_URL } from '../utils/constants';\nimport { OBD_COMPLETED } from '../utils/constants';\nimport { DEVICE_OBD_SUCCESS, DEVICE_OBD_FAILED } from '../utils/constants';\nimport { DEVICE_SUPPORTED, DEVICE_NOT_SUPPORTED, DEVICE_START_SECTOR, FETCH_DEVICE_DB_DATA } from '../utils/constants';\n\nimport { fetchSoftwareDescription, fetchMake } from './get_software';\n//const ROOT_URL = \"https://tranquil-mesa-29755.herokuapp.com/\";\nconst ROOT_URL = WEB_SERVICES_URL + \"/v1/navtooldevices/\";\n\n\nexport function fetchDeviceDBData(deviceSettings){\n\n  //console.log('URL', url);\n\n  return (dispatch) => {\n    const url = ROOT_URL + deviceSettings.serialNumber;\n    const request = axios.get(url);\n    request.then( ({data}) =>{\n      console.log(\"fetchDeviceDBData\")\n      console.log(data);\n      //console.log(data[\"mfg_id\"])\n      console.log(\"fetchDeviceDBData\")\n      //console.log(serial_number);\n      dispatch( { type: FETCH_DEVICE_DB_DATA, payload: {'mfgId': data.mfg_id, 'carMake': data.vehicle_make, 'carModel': data.vehicle_model} } )\n      dispatch(fetchSoftwareDescription(data.mfg_id,data.sw_id,data.sw_build,data.vehicle_make,data.vehicle_model))\n      dispatch(fetchMake(data.mfg_id));\n    });\n  };\n}\n\nexport function updateDeviceDBData(serial_number, update_data){\n  console.log('@@@@@@@@@@@@updateDeviceDBData@@@@@@@@@@@@@');\n  console.log(update_data);\n  console.log('@@@@@@@@@@@@updateDeviceDBData@@@@@@@@@@@@@');\n  const url = ROOT_URL + serial_number;\n  \n  const request = axios.put(url, {\n    sw_id: update_data.sw_id,\n    sw_build: update_data.sw_build,\n    vehicle_make: update_data.vehicle_make,\n    vehicle_model: update_data.vehicle_model\n  });\n  /*\n  const request = axios.put(url, {\n    sw_id: 1,\n    sw_build: 1,\n    vehicle_make: 'XXXX',\n    vehicle_model: 'YYYYY   '\n  });\n  */\n  //console.log('URL', url);\n\n  return (dispatch) => {\n    request.then( ({data}) =>{\n      console.log(data);\n      console.log(data[\"mfg_id\"])\n      dispatch( { type: FETCH_DEVICE_DB_DATA, payload: {'mfgId': data.mfg_id, 'carMake': data.vehicle_make, 'carModel': data.vehicle_model} } )\n      dispatch(fetchSoftwareDescription(data.mfg_id,data.sw_id,data.sw_build,data.vehicle_make,data.vehicle_model))\n    });\n  };\n}\n\nexport function updateDeviceOBDData(serial_number, obd_status){\n  if(obd_status == DEVICE_OBD_SUCCESS){\n    const url = WEB_SERVICES_URL + '/v1/obdupdate/' + \"?mcu_id=\" + serial_number;\n    const request = axios.get(url);\n\n    //console.log('OBD MCU ', serial_number);\n\n    return (dispatch) => {\n      request.then( ({data}) =>{\n        //console.log(data);\n        //console.log(data[\"mfg_id\"])\n        dispatch( { type: OBD_COMPLETED, payload: 'Programming Completed' } )\n        dispatch(fetchDeviceDBData(serial_number))\n      });\n    };\n  }else{\n    return { \n      type: OBD_COMPLETED, \n      payload: 'Programming Failed' \n    }; \n  }\n}\n\nexport function checkDeviceSupport(mfg_id){\n    const url = WEB_SERVICES_URL + '/v1/navtoolhws/' + \"?mfg_id=\" + mfg_id;\n    const request = axios.get(url);\n\n    return (dispatch) => {\n      request.then( ({data}) =>{\n        //console.log(\"checkDeviceSupport\");\n        //console.log(data[0][\"hw_hid\"]);\n        if(data[0][\"hw_hid\"] == 1 || data[0][\"hw_hid\"] == 2){\n          //console.log(\"Supported\");\n          dispatch( { type: DEVICE_SUPPORTED, payload: data[0] } )\n        }else{\n          //console.log(\"Not Supported\");\n          dispatch( { type: DEVICE_NOT_SUPPORTED, payload: '' } )\n        }\n      });\n    };\n\n}\n\nexport function checkDeviceStartSector(mfg_id){\n    const url = WEB_SERVICES_URL + '/v1/navtoolhws/' + \"?mfg_id=\" + mfg_id;\n    const request = axios.get(url);\n\n    return (dispatch) => {\n      request.then( ({data}) =>{\n        //console.log(\"checkDeviceStartSector\");\n        //console.log(\"Supported\");\n        dispatch( { type: DEVICE_START_SECTOR, payload: data[0] } )\n      });\n    };\n\n}","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/actions/get_software.js",["253","254","255","256","257"],"/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/reducers/reducer_software_list.js",["258","259"],"import { FETCH_SOFTWARE, DEVICE_REMOVED, DEVICE_NOT_SUPPORTED, RESET_SEARCH} from '../utils/constants';\n\n\n\nexport default function(state = [], action){\n  switch (action.type){\n    case FETCH_SOFTWARE:\n      //return state.concat([ action.payload.data ]);\n      //or (same crete new array). NEVER!!!!! mutate array\n      return action.payload;\n    case RESET_SEARCH:\n        return [];\n    case DEVICE_REMOVED:\n      return [];\n    case DEVICE_NOT_SUPPORTED:\n      return [];\n  }\n  return state;\n}","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/containers/software_list.js",["260","261"],"/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/reducers/reducer_make.js",["262","263"],"import { FETCH_MAKE, DEVICE_REMOVED, DEVICE_NOT_SUPPORTED } from '../utils/constants';\n\nconst DEFAULT_DROPDOWN_VALUE = {make_id: 0, vehicle_make:\"Select Make...\"};\n\nexport default function(state = {list: [DEFAULT_DROPDOWN_VALUE]}, action){\n  switch (action.type){\n    case FETCH_MAKE:\n      //return state.concat([ action.payload.data ]);\n      //or (same crete new array). NEVER!!!!! mutate array\n      return {list: [DEFAULT_DROPDOWN_VALUE, ...action.payload.data]};\n    case DEVICE_REMOVED:\n      return {list: [DEFAULT_DROPDOWN_VALUE]};\n    case DEVICE_NOT_SUPPORTED:\n       return {list: [DEFAULT_DROPDOWN_VALUE]};\n  }\n  return state;\n}","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/containers/make_list.js",["264","265"],"import React, { Component} from 'react';\nimport { connect} from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\n\n\nclass CarMakeList extends Component {\n  constructor(props){\n    super(props);\n    this.selectMake = this.selectMake.bind(this);\n    this.renderCarMake = this.renderCarMake.bind(this);\n    ////console.log(\"in list\", this.state.mfg_id);\n  }\n\n  selectMake(event){\n    //console.log(\"inside searchModel\", event.target.value);\n    this.props.onSelectVehicleMake(event.target.value);\n  }\n\n  renderCarMake(carMake, index){\n    if(this.props.software_search.vehicle_make == carMake.make_id){\n        return (\n            <option key={carMake.vehicle_make}\n                    value={carMake.make_id}\n                    selected\n            >\n                {carMake.vehicle_make}\n            </option>\n        );\n    }else{\n        return (\n            <option key={carMake.vehicle_make}\n                    value={carMake.make_id}\n            >\n            {carMake.vehicle_make}\n            </option>\n        );\n    }\n  }\n\n  render(){\n    return (\n        <select className=\"ui dropdown compact\" onChange={this.selectMake}>\n          { this.props.car_make.list.map(this.renderCarMake) }\n        </select>\n    );\n  }\n}\n\n\nfunction mapStateToProps(state){\n  return { car_make: state.car_make,\n           software_search: state.software_search,\n        };\n}\n\n\nexport default connect(mapStateToProps)(CarMakeList);","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/containers/software_search.js",["266","267","268"],"/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/containers/year_list.js",["269"],"import React, { Component} from 'react';\nimport { connect} from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\n\n\nclass CarYearList extends Component {\n  constructor(props){\n    super(props);\n    this.selectYear = this.selectYear.bind(this);\n    ////console.log(\"in list\", this.state.mfg_id);\n  }\n\n  selectYear(event){\n    //console.log(\"inside selectYear\", event.target.value);\n    this.props.onSelectVehicleYear(event.target.value);\n  }\n\n  renderCarYear(carYear, index){\n    return (\n      <option key={carYear.id}\n              value={carYear.id}\n      >\n      {carYear.vehicle_year}\n      </option>\n    );\n  }\n\n  render(){\n    return (\n        <select className=\"ui dropdown\" onChange={this.selectYear} value={this.props.software_search.vehicle_year}>\n          { this.props.car_year.list.map(this.renderCarYear) }\n        </select>\n    );\n  }\n}\n\n\nfunction mapStateToProps(state){\n  return { car_year: state.car_year,\n           software_search: state.software_search\n  };\n}\n\n\nexport default connect(mapStateToProps)(CarYearList);\n","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/containers/transmission_option.js",["270"],"import React, { Component} from 'react';\nimport { connect} from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { TRANSMISSION_TYPE_DROPDOWN } from '../utils/structures';\n\n\n\nclass TransmissionOptionList extends Component {\n  constructor(props){\n    super(props);\n    this.selectTransmissionOption = this.selectTransmissionOption.bind(this);\n    ////console.log(\"in list\", this.state.mfg_id);\n  }\n\n  selectTransmissionOption(event){\n    //console.log(\"inside selectTransmissionOption\", event.target.value);\n    this.props.onSelectTransmissionOption(event.target.value);\n  }\n\n  renderTransmissionOption(option, index){\n    //console.log(option);\n    return (\n      <option key={option.key}\n              value={option.value}\n      >\n        {option.label}\n      </option>\n    );\n  }\n\n  render(){\n    return (\n        <select className=\"ui dropdown\" onChange={this.selectTransmissionOption} value={this.props.software_search.automatic_transmission}>\n          { TRANSMISSION_TYPE_DROPDOWN[\"values\"].map(this.renderTransmissionOption) }\n        </select>\n    );\n  }\n}\n\n\nfunction mapStateToProps(state){\n  return { software_search: state.software_search };\n}\n\n\nexport default connect(mapStateToProps)(TransmissionOptionList);\n","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/containers/model_list.js",["271"],"import React, { Component} from 'react';\nimport { connect} from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\n\n\nclass CarModelList extends Component {\n  constructor(props){\n    super(props);\n    this.selectModel = this.selectModel.bind(this);\n  }\n\n  selectModel(event){\n    //console.log(\"inside selectModel\", event.target.value);\n    this.props.onSelectVehicleModel(event.target.value);\n  }\n\n  renderCarModel(carModel, index){\n    //console.log(carModel);\n    return (\n      <option key={carModel.model_id}\n              value={carModel.model_id}\n      >\n      {carModel.vehicle_model}\n      </option>\n    );\n  }\n\n  render(){\n    return (\n        <select className=\"ui dropdown\" onChange={this.selectModel}>\n          { this.props.car_model.list.map(this.renderCarModel) }\n        </select>\n    );\n  }\n}\n\n\nfunction mapStateToProps(state){\n  return { car_model: state.car_model};\n}\n\n\nexport default connect(mapStateToProps)(CarModelList);\n","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/reducers/reducer_model.js",["272","273"],"import {  FETCH_MODEL,\n          DEVICE_REMOVED,\n          DEVICE_NOT_SUPPORTED,\n          RESET_SEARCH } from '../utils/constants';\n\n\nconst DEFAULT_DROPDOWN_VALUE = {model_id: 0, vehicle_model:\"Select Model...\"};\n\nexport default function(state = {list: [DEFAULT_DROPDOWN_VALUE]}, action){\n  switch (action.type){\n    case FETCH_MODEL:\n      //return state.concat([ action.payload.data ]);\n      //or (same crete new array). NEVER!!!!! mutate array\n      return {list: [DEFAULT_DROPDOWN_VALUE, ...action.payload.data]};\n    case RESET_SEARCH:\n      return {list: [DEFAULT_DROPDOWN_VALUE]};\n    case DEVICE_REMOVED:\n      return {list: [DEFAULT_DROPDOWN_VALUE]};\n    case DEVICE_NOT_SUPPORTED:\n      return {list: [DEFAULT_DROPDOWN_VALUE]};\n  }\n  return state;\n}\n","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/reducers/reducer_year.js",["274","275"],"import { FETCH_YEAR, FETCH_MODEL, DEVICE_REMOVED, DEVICE_NOT_SUPPORTED, RESET_SEARCH } from '../utils/constants';\nvar _ = require('lodash');\n\nconst DEFAULT_DROPDOWN_VALUE = {id: 0, vehicle_year:\"Select Year...\"};\nlet topYear = new Date().getFullYear();\nconst YEAR_LIST = _.range(1996,topYear+2).reverse().map((i) => {\n      return {id: i, vehicle_year:i};\n    });\n\nexport default function(state = {list: [DEFAULT_DROPDOWN_VALUE]}, action){\n  switch (action.type){\n    case FETCH_YEAR:\n      //return state.concat([ action.payload.data ]);\n      //or (same crete new array). NEVER!!!!! mutate array\n      return {list: [DEFAULT_DROPDOWN_VALUE, ...YEAR_LIST ]};\n    case RESET_SEARCH:\n      return {list: [DEFAULT_DROPDOWN_VALUE]};\n    case FETCH_MODEL:\n      return {list: [DEFAULT_DROPDOWN_VALUE]};\n    case DEVICE_REMOVED:\n      return {list: [DEFAULT_DROPDOWN_VALUE]};\n    case DEVICE_NOT_SUPPORTED:\n      return {list: [DEFAULT_DROPDOWN_VALUE]};\n  }\n  return state;\n}\n","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/reducers/reducer_software_search.js",["276","277"],"/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/containers/input_settings.js",["278"],"import React, { Component} from 'react';\nimport { connect} from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport {    INPUT_1_CONFIG,\n            INPUT_2_CONFIG,\n            INPUT_3_CONFIG,\n            INPUT_4_CONFIG } from '../utils/structures'; \n\nimport { UPDATE_SYSTEM_SETTINGS } from '../utils/constants'; \n\nimport {  setSystemSetting } from '../actions/hid_actions';\n\nclass InputSettings extends Component {\n  constructor(props){\n    super(props);\n    this.renderInputDropdown = this.renderInputDropdown.bind(this);\n    this.setInputDropdown = this.setInputDropdown.bind(this);\n    this.saveSettings = this.saveSettings.bind(this);\n    this.resetSettings = this.resetSettings.bind(this);\n  }\n\n  renderInputDropdown(option, index, value){\n    ////console.log(\"here \", value);\n    if(option.value == value){\n      return (\n        <option key={option.key}\n                value={option.value}\n                selected\n                data-name={option.setting}\n        >\n        {option.label}\n        </option>\n      );\n    }else {\n      return (\n        <option key={option.key}\n                value={option.value}\n                data-name={option.setting}\n        >\n        {option.label}\n        </option>\n      );\n    }\n  }\n\n  setInputDropdown(event){\n    //let osd_settings = this.state.osd_settings;\n    //osd_settings[event.target.id] = event.target.value;\n    console.log(event.target.id, event.target.value);\n    console.log(this.props.system_settings);\n    this.props.setSystemSetting(UPDATE_SYSTEM_SETTINGS, event.target.id, event.target.value);\n  }\n\n  saveSettings(){\n    this.props.onDeviceSettingsSave();\n  }\n\n  resetSettings(){\n    this.props.onResetSettings();\n  }\n\n  render(){\n    return (\n        <div>\n            <div class=\"ui stackable grid\">\n\n                <div className=\"row\">\n                    <div className=\"ui right pointing label\">\n                        Input 1\n                    </div> \n                    <select onChange={this.setInputDropdown} id={INPUT_1_CONFIG[\"id\"]} className=\"ui dropdown\">\n                    { INPUT_1_CONFIG[\"values\"].map( (elem, index) => {return this.renderInputDropdown(elem,index,this.props.system_settings[\"rearCamera\"]);} ) }\n                    </select>\n                    <br ></br><br ></br>\n                </div>\n                \n                <div className=\"row\">\n                    <div className=\"ui right pointing label\">\n                        Input 2\n                    </div> \n                    <select onChange={this.setInputDropdown} id={INPUT_2_CONFIG[\"id\"]} className=\"ui dropdown\">\n                    { INPUT_2_CONFIG[\"values\"].map( (elem, index) => {return this.renderInputDropdown(elem,index,this.props.system_settings[\"frontCamera\"]);} ) }\n                    </select> \n                </div>\n\n                <div className=\"row\">\n                    <div className=\"ui right pointing label\">\n                        Input 3\n                    </div> \n                    <select onChange={this.setInputDropdown} id={INPUT_3_CONFIG[\"id\"]} className=\"ui dropdown\">\n                    { INPUT_3_CONFIG[\"values\"].map( (elem, index) => {return this.renderInputDropdown(elem,index,this.props.system_settings[\"leftCamera\"]);} ) }\n                    </select> \n                </div>\n\n                <div className=\"row\">\n                    <div className=\"ui right pointing label\">\n                        Input 4\n                    </div> \n                    <select onChange={this.setInputDropdown} id={INPUT_4_CONFIG[\"id\"]} className=\"ui dropdown\">\n                    { INPUT_4_CONFIG[\"values\"].map( (elem, index) => {return this.renderInputDropdown(elem,index,this.props.system_settings[\"rightCamera\"]);} ) }\n                    </select> \n                </div>\n                <div className=\"row\">\n                    <button onClick={this.resetSettings} className=\"ui primary button\">\n                        Reset\n                    </button>\n                    <button onClick={this.saveSettings} className=\"ui red button\">\n                        Save\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n  }\n}\n\n\nfunction mapStateToProps(state){\n  return { system_settings: state.system_settings };\n}\n\nfunction mapDispatchToProps(dispatch){\n    return bindActionCreators({ setSystemSetting }, dispatch);\n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputSettings);","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/containers/misc_settings.js",["279","280"],"import React, { Component} from 'react';\nimport { connect} from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Radio } from 'semantic-ui-react'\n\nimport {  \n    AUTO_SWITCH_RADIO,\n    AUDIO_FEEDBACK_RADIO,\n    ACTIVATION_WIRE_RADIO } from '../utils/structures'; \n\nimport { UPDATE_SYSTEM_SETTINGS } from '../utils/constants'; \n\nimport {  setSystemSetting } from '../actions/hid_actions';\n\nclass MiscSettings extends Component {\n  constructor(props){\n    super(props);\n    this.saveSettings = this.saveSettings.bind(this);\n    this.resetSettings = this.resetSettings.bind(this);\n    this.renderRadioBatton = this.renderRadioBatton.bind(this);\n    this.onRadioBattonChange = this.onRadioBattonChange.bind(this);\n    this.renderToggleRadioBatton = this.renderToggleRadioBatton.bind(this);\n    this.onToggleRadioBattonChange = this.onToggleRadioBattonChange.bind(this);\n  }\n  renderToggleRadioBatton(setting){\n    console.log('renderToggleRadioBatton: ',setting );\n    return (\n        <div>\n            <Radio \n                toggle\n                value = {setting} \n                checked={1 == this.props.system_settings[setting]} \n                onChange={(event, {checked, value }) => this.onToggleRadioBattonChange(checked,value)}        \n            /> \n        </div>  \n    );  \n  }\n  renderRadioBatton(option, index){\n    //console.log('zzzzzzzzzzzzzzzzzzzzzzzzzzz');\n    //console.log(option.value);\n    //console.log(option.setting);\n    //console.log(this.state.system_settings[option.setting]);\n    return (\n          <div>\n            <div className=\"inline field\">\n                  <input type=\"radio\"\n                        name={option.setting}\n                        id={option.setting}\n                        value={option.value}\n                        checked={option.value == this.props.system_settings[option.setting]}                       \n                        onChange={event => this.onRadioBattonChange(event.target.checked, event.target.value, option.setting)}\n                  />\n                  <div className=\"ui left pointing label\">\n                    {option.label}\n                  </div>\n                  <br/>                    \n            </div>\n          </div>\n    );\n  }\n\n  onToggleRadioBattonChange(checked,setting){\n    console.log('onToggleRadioBattonChange');\n    console.log(checked);\n    console.log(setting);\n    this.props.setSystemSetting(UPDATE_SYSTEM_SETTINGS, setting, checked?\"1\":\"0\");\n  }\n\n  onRadioBattonChange(checked, value, name){\n    console.log(checked);\n    console.log(value);\n    console.log(name);\n    this.props.setSystemSetting(UPDATE_SYSTEM_SETTINGS, name, value);\n    //let system_settings = this.state.system_settings;\n    //system_settings[name] = value;\n    //this.setState({system_settings});\n  }\n\n  saveSettings(){\n    this.props.onDeviceSettingsSave();\n  }\n\n  resetSettings(){\n    this.props.onResetSettings();\n  }\n\n  render(){\n    return (\n        <div>\n            <div class=\"ui stackable grid\">\n                <div className=\"row\">\n                    <div className=\"ui label\">\n                        {AUTO_SWITCH_RADIO[\"label\"]}:\n                    </div> \n                    { \n                        this.renderToggleRadioBatton(AUTO_SWITCH_RADIO[\"id\"])\n                        /*AUTO_SWITCH_RADIO[\"values\"].map( (elem, index) => {return this.renderRadioBatton(elem,index)})*/\n                    }   \n                </div>  \n                <div className=\"row\">\n                    <div className=\"ui label\">\n                        {AUDIO_FEEDBACK_RADIO[\"label\"]}:\n                    </div> \n                    { \n                        this.renderToggleRadioBatton(AUDIO_FEEDBACK_RADIO[\"id\"])\n                        /*AUDIO_FEEDBACK_RADIO[\"values\"].map( (elem, index) => {return this.renderRadioBatton(elem,index)})*/\n                    }   \n                </div>  \n                <div className=\"row\">\n                    <div className=\"ui label\">\n                        {ACTIVATION_WIRE_RADIO[\"label\"]}:\n                    </div> \n                    {\n                        this.renderToggleRadioBatton(ACTIVATION_WIRE_RADIO[\"id\"])\n                        /*ACTIVATION_WIRE_RADIO[\"values\"].map( (elem, index) => {return this.renderRadioBatton(elem,index)})*/\n                    }   \n                </div>  \n                <div className=\"row\">\n                    <button onClick={this.resetSettings} className=\"ui primary button\">\n                        Reset\n                    </button>\n                    <button onClick={this.saveSettings} className=\"ui red button\">\n                        Save\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n  }\n}\n\n\nfunction mapStateToProps(state){\n  return { system_settings: state.system_settings };\n}\n\nfunction mapDispatchToProps(dispatch){\n    return bindActionCreators({ setSystemSetting }, dispatch);\n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MiscSettings);","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/reducers/reducer_messages.js",["281","282"],"import {    SUCCESS_SETTINGS_UPDATE,\n            FAILED_SETTINGS_UPDATE,\n            FTP_LOAD_FAILURE,\n            DISPLAY_UPDATE_ERROR,\n            DISPLAY_UPDATE_SUCCESS,\n            ICON_INFO,\n            ICON_ERROR,\n            HIDE_MODAL } from '../utils/constants';\nimport { MODAL_MESSAGES } from '../utils/structures';\n\nexport default function(state = JSON.parse(JSON.stringify(MODAL_MESSAGES)), action){\n    //console.log(\"In message reducer\");\n    //console.log(action.type);\n    let new_state = {};\n    switch (action.type){\n        case SUCCESS_SETTINGS_UPDATE:\n            new_state = Object.assign({}, state, action.payload, {open_modal: true, message_icon: `${ICON_INFO}`});\n            return new_state;\n        case DISPLAY_UPDATE_SUCCESS:\n            new_state = Object.assign({}, state, action.payload, {open_modal: true, message_icon: `${ICON_INFO}`});\n            return new_state;\n        case FAILED_SETTINGS_UPDATE:\n            new_state = Object.assign({}, state, action.payload, {open_modal: true, message_icon: `${ICON_ERROR}`});\n            return new_state;\n        case FTP_LOAD_FAILURE:\n            new_state = Object.assign({}, state, action.payload, {open_modal: true, message_icon: `${ICON_ERROR}`});\n            return new_state;\n        case DISPLAY_UPDATE_ERROR:\n            new_state = Object.assign({}, state, action.payload, {open_modal: true, message_icon: `${ICON_ERROR}`});\n            return new_state;\n        case HIDE_MODAL:\n            new_state = JSON.parse(JSON.stringify(MODAL_MESSAGES));\n            return new_state;\n        default:\n            return state;\n    }\n    return state;\n}","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/actions/misc_actions.js",[],{"ruleId":"283","replacedBy":"284"},{"ruleId":"285","replacedBy":"286"},{"ruleId":"287","severity":1,"message":"288","line":1,"column":8,"nodeType":"289","messageId":"290","endLine":1,"endColumn":12},{"ruleId":"287","severity":1,"message":"291","line":7,"column":13,"nodeType":"289","messageId":"290","endLine":7,"endColumn":34},{"ruleId":"292","severity":1,"message":"293","line":27,"column":18,"nodeType":"294","messageId":"295","endLine":27,"endColumn":20},{"ruleId":"292","severity":1,"message":"293","line":169,"column":15,"nodeType":"294","messageId":"295","endLine":169,"endColumn":17},{"ruleId":"296","severity":1,"message":"297","line":185,"column":11,"nodeType":"289","messageId":"298","endLine":185,"endColumn":12},{"ruleId":"296","severity":1,"message":"297","line":202,"column":11,"nodeType":"289","messageId":"298","endLine":202,"endColumn":12},{"ruleId":"292","severity":1,"message":"293","line":214,"column":71,"nodeType":"294","messageId":"295","endLine":214,"endColumn":73},{"ruleId":"292","severity":1,"message":"293","line":234,"column":15,"nodeType":"294","messageId":"295","endLine":234,"endColumn":17},{"ruleId":"287","severity":1,"message":"299","line":245,"column":11,"nodeType":"289","messageId":"290","endLine":245,"endColumn":27},{"ruleId":"292","severity":1,"message":"293","line":291,"column":23,"nodeType":"294","messageId":"295","endLine":291,"endColumn":25},{"ruleId":"296","severity":1,"message":"297","line":332,"column":12,"nodeType":"289","messageId":"298","endLine":332,"endColumn":13},{"ruleId":"296","severity":1,"message":"297","line":339,"column":12,"nodeType":"289","messageId":"298","endLine":339,"endColumn":13},{"ruleId":"287","severity":1,"message":"300","line":340,"column":5,"nodeType":"289","messageId":"290","endLine":340,"endColumn":16},{"ruleId":"296","severity":1,"message":"297","line":342,"column":12,"nodeType":"289","messageId":"298","endLine":342,"endColumn":13},{"ruleId":"287","severity":1,"message":"301","line":343,"column":5,"nodeType":"289","messageId":"290","endLine":343,"endColumn":17},{"ruleId":"296","severity":1,"message":"297","line":350,"column":11,"nodeType":"289","messageId":"298","endLine":350,"endColumn":12},{"ruleId":"287","severity":1,"message":"302","line":393,"column":7,"nodeType":"289","messageId":"290","endLine":393,"endColumn":21},{"ruleId":"287","severity":1,"message":"303","line":442,"column":7,"nodeType":"289","messageId":"290","endLine":442,"endColumn":17},{"ruleId":"287","severity":1,"message":"304","line":546,"column":7,"nodeType":"289","messageId":"290","endLine":546,"endColumn":23},{"ruleId":"287","severity":1,"message":"304","line":582,"column":7,"nodeType":"289","messageId":"290","endLine":582,"endColumn":23},{"ruleId":"292","severity":1,"message":"293","line":610,"column":45,"nodeType":"294","messageId":"295","endLine":610,"endColumn":47},{"ruleId":"287","severity":1,"message":"304","line":627,"column":7,"nodeType":"289","messageId":"290","endLine":627,"endColumn":23},{"ruleId":"287","severity":1,"message":"305","line":11,"column":11,"nodeType":"289","messageId":"290","endLine":11,"endColumn":24},{"ruleId":"306","severity":1,"message":"307","line":14,"column":1,"nodeType":"308","endLine":200,"endColumn":2},{"ruleId":"309","severity":1,"message":"310","line":18,"column":3,"nodeType":"311","messageId":"312","endLine":198,"endColumn":4},{"ruleId":"313","severity":1,"message":"314","line":50,"column":5,"nodeType":"315","messageId":"316","endLine":56,"endColumn":24},{"ruleId":"287","severity":1,"message":"317","line":66,"column":11,"nodeType":"289","messageId":"290","endLine":66,"endColumn":18},{"ruleId":"287","severity":1,"message":"318","line":67,"column":11,"nodeType":"289","messageId":"290","endLine":67,"endColumn":20},{"ruleId":"292","severity":1,"message":"293","line":75,"column":19,"nodeType":"294","messageId":"295","endLine":75,"endColumn":21},{"ruleId":"287","severity":1,"message":"319","line":81,"column":23,"nodeType":"289","messageId":"290","endLine":81,"endColumn":36},{"ruleId":"296","severity":1,"message":"297","line":89,"column":15,"nodeType":"289","messageId":"298","endLine":89,"endColumn":16},{"ruleId":"287","severity":1,"message":"320","line":92,"column":9,"nodeType":"289","messageId":"290","endLine":92,"endColumn":19},{"ruleId":"287","severity":1,"message":"321","line":100,"column":7,"nodeType":"289","messageId":"290","endLine":100,"endColumn":20},{"ruleId":"296","severity":1,"message":"297","line":181,"column":16,"nodeType":"289","messageId":"298","endLine":181,"endColumn":17},{"ruleId":"287","severity":1,"message":"300","line":182,"column":9,"nodeType":"289","messageId":"290","endLine":182,"endColumn":20},{"ruleId":"296","severity":1,"message":"297","line":184,"column":16,"nodeType":"289","messageId":"298","endLine":184,"endColumn":17},{"ruleId":"287","severity":1,"message":"301","line":185,"column":9,"nodeType":"289","messageId":"290","endLine":185,"endColumn":21},{"ruleId":"296","severity":1,"message":"297","line":189,"column":16,"nodeType":"289","messageId":"298","endLine":189,"endColumn":17},{"ruleId":"287","severity":1,"message":"322","line":18,"column":10,"nodeType":"289","messageId":"290","endLine":18,"endColumn":27},{"ruleId":"292","severity":1,"message":"323","line":37,"column":23,"nodeType":"294","messageId":"295","endLine":37,"endColumn":25},{"ruleId":"309","severity":1,"message":"310","line":41,"column":9,"nodeType":"311","messageId":"312","endLine":115,"endColumn":10},{"ruleId":"309","severity":1,"message":"310","line":44,"column":17,"nodeType":"311","messageId":"312","endLine":60,"endColumn":18},{"ruleId":"309","severity":1,"message":"310","line":95,"column":17,"nodeType":"311","messageId":"312","endLine":113,"endColumn":18},{"ruleId":"292","severity":1,"message":"293","line":99,"column":31,"nodeType":"294","messageId":"295","endLine":99,"endColumn":33},{"ruleId":"292","severity":1,"message":"293","line":106,"column":31,"nodeType":"294","messageId":"295","endLine":106,"endColumn":33},{"ruleId":"309","severity":1,"message":"310","line":133,"column":5,"nodeType":"311","messageId":"312","endLine":187,"endColumn":6},{"ruleId":"287","severity":1,"message":"324","line":3,"column":8,"nodeType":"289","messageId":"290","endLine":3,"endColumn":9},{"ruleId":"287","severity":1,"message":"325","line":39,"column":5,"nodeType":"289","messageId":"290","endLine":39,"endColumn":6},{"ruleId":"292","severity":1,"message":"293","line":70,"column":51,"nodeType":"294","messageId":"295","endLine":70,"endColumn":53},{"ruleId":"326","severity":1,"message":"327","line":79,"column":15,"nodeType":"328","endLine":79,"endColumn":74},{"ruleId":"326","severity":1,"message":"327","line":83,"column":15,"nodeType":"328","endLine":83,"endColumn":74},{"ruleId":"326","severity":1,"message":"327","line":87,"column":15,"nodeType":"328","endLine":87,"endColumn":74},{"ruleId":"292","severity":1,"message":"293","line":99,"column":51,"nodeType":"294","messageId":"295","endLine":99,"endColumn":53},{"ruleId":"292","severity":1,"message":"323","line":137,"column":18,"nodeType":"294","messageId":"295","endLine":137,"endColumn":20},{"ruleId":"292","severity":1,"message":"323","line":141,"column":23,"nodeType":"294","messageId":"295","endLine":141,"endColumn":25},{"ruleId":"292","severity":1,"message":"293","line":159,"column":21,"nodeType":"294","messageId":"295","endLine":159,"endColumn":23},{"ruleId":"292","severity":1,"message":"293","line":181,"column":29,"nodeType":"294","messageId":"295","endLine":181,"endColumn":31},{"ruleId":"292","severity":1,"message":"293","line":225,"column":48,"nodeType":"294","messageId":"295","endLine":225,"endColumn":50},{"ruleId":"292","severity":1,"message":"323","line":239,"column":49,"nodeType":"294","messageId":"295","endLine":239,"endColumn":51},{"ruleId":"292","severity":1,"message":"293","line":277,"column":40,"nodeType":"294","messageId":"295","endLine":277,"endColumn":42},{"ruleId":"292","severity":1,"message":"293","line":277,"column":115,"nodeType":"294","messageId":"295","endLine":277,"endColumn":117},{"ruleId":"292","severity":1,"message":"323","line":278,"column":60,"nodeType":"294","messageId":"295","endLine":278,"endColumn":62},{"ruleId":"292","severity":1,"message":"293","line":284,"column":45,"nodeType":"294","messageId":"295","endLine":284,"endColumn":47},{"ruleId":"292","severity":1,"message":"293","line":284,"column":120,"nodeType":"294","messageId":"295","endLine":284,"endColumn":122},{"ruleId":"292","severity":1,"message":"323","line":285,"column":60,"nodeType":"294","messageId":"295","endLine":285,"endColumn":62},{"ruleId":"292","severity":1,"message":"293","line":290,"column":45,"nodeType":"294","messageId":"295","endLine":290,"endColumn":47},{"ruleId":"292","severity":1,"message":"293","line":290,"column":120,"nodeType":"294","messageId":"295","endLine":290,"endColumn":122},{"ruleId":"292","severity":1,"message":"323","line":291,"column":60,"nodeType":"294","messageId":"295","endLine":291,"endColumn":62},{"ruleId":"292","severity":1,"message":"293","line":296,"column":45,"nodeType":"294","messageId":"295","endLine":296,"endColumn":47},{"ruleId":"292","severity":1,"message":"293","line":296,"column":120,"nodeType":"294","messageId":"295","endLine":296,"endColumn":122},{"ruleId":"292","severity":1,"message":"323","line":297,"column":60,"nodeType":"294","messageId":"295","endLine":297,"endColumn":62},{"ruleId":"292","severity":1,"message":"293","line":302,"column":45,"nodeType":"294","messageId":"295","endLine":302,"endColumn":47},{"ruleId":"292","severity":1,"message":"293","line":302,"column":120,"nodeType":"294","messageId":"295","endLine":302,"endColumn":122},{"ruleId":"292","severity":1,"message":"323","line":303,"column":60,"nodeType":"294","messageId":"295","endLine":303,"endColumn":62},{"ruleId":"292","severity":1,"message":"293","line":308,"column":45,"nodeType":"294","messageId":"295","endLine":308,"endColumn":47},{"ruleId":"292","severity":1,"message":"293","line":308,"column":120,"nodeType":"294","messageId":"295","endLine":308,"endColumn":122},{"ruleId":"292","severity":1,"message":"323","line":309,"column":60,"nodeType":"294","messageId":"295","endLine":309,"endColumn":62},{"ruleId":"292","severity":1,"message":"293","line":314,"column":45,"nodeType":"294","messageId":"295","endLine":314,"endColumn":47},{"ruleId":"292","severity":1,"message":"293","line":314,"column":120,"nodeType":"294","messageId":"295","endLine":314,"endColumn":122},{"ruleId":"292","severity":1,"message":"323","line":315,"column":60,"nodeType":"294","messageId":"295","endLine":315,"endColumn":62},{"ruleId":"292","severity":1,"message":"293","line":320,"column":45,"nodeType":"294","messageId":"295","endLine":320,"endColumn":47},{"ruleId":"292","severity":1,"message":"293","line":320,"column":120,"nodeType":"294","messageId":"295","endLine":320,"endColumn":122},{"ruleId":"292","severity":1,"message":"293","line":327,"column":45,"nodeType":"294","messageId":"295","endLine":327,"endColumn":47},{"ruleId":"292","severity":1,"message":"293","line":327,"column":120,"nodeType":"294","messageId":"295","endLine":327,"endColumn":122},{"ruleId":"292","severity":1,"message":"323","line":328,"column":60,"nodeType":"294","messageId":"295","endLine":328,"endColumn":62},{"ruleId":"306","severity":1,"message":"307","line":43,"column":1,"nodeType":"308","endLine":153,"endColumn":2},{"ruleId":"287","severity":1,"message":"329","line":46,"column":7,"nodeType":"289","messageId":"290","endLine":46,"endColumn":19},{"ruleId":"309","severity":1,"message":"310","line":47,"column":3,"nodeType":"311","messageId":"312","endLine":151,"endColumn":4},{"ruleId":"292","severity":1,"message":"323","line":95,"column":27,"nodeType":"294","messageId":"295","endLine":95,"endColumn":29},{"ruleId":"292","severity":1,"message":"293","line":120,"column":37,"nodeType":"294","messageId":"295","endLine":120,"endColumn":39},{"ruleId":"292","severity":1,"message":"293","line":31,"column":49,"nodeType":"294","messageId":"295","endLine":31,"endColumn":51},{"ruleId":"292","severity":1,"message":"293","line":33,"column":56,"nodeType":"294","messageId":"295","endLine":33,"endColumn":58},{"ruleId":"292","severity":1,"message":"293","line":46,"column":51,"nodeType":"294","messageId":"295","endLine":46,"endColumn":53},{"ruleId":"292","severity":1,"message":"293","line":48,"column":58,"nodeType":"294","messageId":"295","endLine":48,"endColumn":60},{"ruleId":"292","severity":1,"message":"293","line":59,"column":49,"nodeType":"294","messageId":"295","endLine":59,"endColumn":51},{"ruleId":"292","severity":1,"message":"323","line":106,"column":51,"nodeType":"294","messageId":"295","endLine":106,"endColumn":53},{"ruleId":"292","severity":1,"message":"323","line":122,"column":51,"nodeType":"294","messageId":"295","endLine":122,"endColumn":53},{"ruleId":"292","severity":1,"message":"293","line":136,"column":46,"nodeType":"294","messageId":"295","endLine":136,"endColumn":48},{"ruleId":"292","severity":1,"message":"293","line":142,"column":52,"nodeType":"294","messageId":"295","endLine":142,"endColumn":54},{"ruleId":"287","severity":1,"message":"330","line":9,"column":30,"nodeType":"289","messageId":"290","endLine":9,"endColumn":47},{"ruleId":"292","severity":1,"message":"293","line":70,"column":17,"nodeType":"294","messageId":"295","endLine":70,"endColumn":19},{"ruleId":"331","severity":1,"message":"332","line":71,"column":53,"nodeType":"294","messageId":"333","endLine":71,"endColumn":54},{"ruleId":"331","severity":1,"message":"332","line":93,"column":54,"nodeType":"294","messageId":"333","endLine":93,"endColumn":55},{"ruleId":"292","severity":1,"message":"293","line":100,"column":30,"nodeType":"294","messageId":"295","endLine":100,"endColumn":32},{"ruleId":"292","severity":1,"message":"293","line":100,"column":56,"nodeType":"294","messageId":"295","endLine":100,"endColumn":58},{"ruleId":"331","severity":1,"message":"332","line":113,"column":54,"nodeType":"294","messageId":"333","endLine":113,"endColumn":55},{"ruleId":"292","severity":1,"message":"323","line":19,"column":43,"nodeType":"294","messageId":"295","endLine":19,"endColumn":45},{"ruleId":"292","severity":1,"message":"323","line":22,"column":45,"nodeType":"294","messageId":"295","endLine":22,"endColumn":47},{"ruleId":"292","severity":1,"message":"323","line":25,"column":43,"nodeType":"294","messageId":"295","endLine":25,"endColumn":45},{"ruleId":"292","severity":1,"message":"293","line":28,"column":63,"nodeType":"294","messageId":"295","endLine":28,"endColumn":65},{"ruleId":"292","severity":1,"message":"323","line":59,"column":22,"nodeType":"294","messageId":"295","endLine":59,"endColumn":24},{"ruleId":"306","severity":1,"message":"307","line":5,"column":1,"nodeType":"308","endLine":19,"endColumn":2},{"ruleId":"309","severity":1,"message":"310","line":6,"column":3,"nodeType":"311","messageId":"312","endLine":17,"endColumn":4},{"ruleId":"287","severity":1,"message":"334","line":3,"column":8,"nodeType":"289","messageId":"290","endLine":3,"endColumn":17},{"ruleId":"287","severity":1,"message":"335","line":36,"column":9,"nodeType":"289","messageId":"290","endLine":36,"endColumn":14},{"ruleId":"306","severity":1,"message":"307","line":5,"column":1,"nodeType":"308","endLine":17,"endColumn":2},{"ruleId":"309","severity":1,"message":"310","line":6,"column":3,"nodeType":"311","messageId":"312","endLine":15,"endColumn":4},{"ruleId":"287","severity":1,"message":"336","line":3,"column":10,"nodeType":"289","messageId":"290","endLine":3,"endColumn":28},{"ruleId":"292","severity":1,"message":"293","line":21,"column":48,"nodeType":"294","messageId":"295","endLine":21,"endColumn":50},{"ruleId":"292","severity":1,"message":"293","line":34,"column":50,"nodeType":"294","messageId":"295","endLine":34,"endColumn":52},{"ruleId":"292","severity":1,"message":"293","line":36,"column":56,"nodeType":"294","messageId":"295","endLine":36,"endColumn":58},{"ruleId":"292","severity":1,"message":"293","line":103,"column":49,"nodeType":"294","messageId":"295","endLine":103,"endColumn":51},{"ruleId":"287","severity":1,"message":"336","line":3,"column":10,"nodeType":"289","messageId":"290","endLine":3,"endColumn":28},{"ruleId":"287","severity":1,"message":"336","line":3,"column":10,"nodeType":"289","messageId":"290","endLine":3,"endColumn":28},{"ruleId":"287","severity":1,"message":"336","line":3,"column":10,"nodeType":"289","messageId":"290","endLine":3,"endColumn":28},{"ruleId":"306","severity":1,"message":"307","line":9,"column":1,"nodeType":"308","endLine":23,"endColumn":2},{"ruleId":"309","severity":1,"message":"310","line":10,"column":3,"nodeType":"311","messageId":"312","endLine":21,"endColumn":4},{"ruleId":"306","severity":1,"message":"307","line":10,"column":1,"nodeType":"308","endLine":26,"endColumn":2},{"ruleId":"309","severity":1,"message":"310","line":11,"column":3,"nodeType":"311","messageId":"312","endLine":24,"endColumn":4},{"ruleId":"306","severity":1,"message":"307","line":15,"column":1,"nodeType":"308","endLine":69,"endColumn":2},{"ruleId":"309","severity":1,"message":"310","line":17,"column":3,"nodeType":"311","messageId":"312","endLine":67,"endColumn":4},{"ruleId":"292","severity":1,"message":"293","line":25,"column":21,"nodeType":"294","messageId":"295","endLine":25,"endColumn":23},{"ruleId":"292","severity":1,"message":"293","line":32,"column":28,"nodeType":"294","messageId":"295","endLine":32,"endColumn":30},{"ruleId":"292","severity":1,"message":"293","line":50,"column":47,"nodeType":"294","messageId":"295","endLine":50,"endColumn":49},{"ruleId":"306","severity":1,"message":"307","line":11,"column":1,"nodeType":"308","endLine":38,"endColumn":2},{"ruleId":"337","severity":1,"message":"338","line":37,"column":5,"nodeType":"339","messageId":"340","endLine":37,"endColumn":18},"no-native-reassign",["341"],"no-negated-in-lhs",["342"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'START_SOFTWARE_UPDATE' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'i' is already defined.","redeclared","'binaryStringFrmt' is assigned a value but never used.","'vihicleMake' is assigned a value but never used.","'vihicleModel' is assigned a value but never used.","'byteStringFrmt' is assigned a value but never used.","'totalPages' is assigned a value but never used.","'doubleStringFrmt' is assigned a value but never used.","'getDeviceData' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'zaction' is assigned a value but never used.","'usbResult' is assigned a value but never used.","'serial_number' is assigned a value but never used.","'softwareId' is assigned a value but never used.","'softwareBuild' is assigned a value but never used.","'SMALL_SECTOR_SIZE' is defined but never used.","Expected '!==' and instead saw '!='.","'$' is defined but never used.","'j' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'payload_data' is assigned a value but never used.","'DEVICE_OBD_FAILED' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'DataTable' is defined but never used.","'table' is assigned a value but never used.","'bindActionCreators' is defined but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","no-global-assign","no-unsafe-negation"]