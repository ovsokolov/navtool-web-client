[{"/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/index.js":"1","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/App.js":"2","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/reportWebVitals.js":"3","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/utils/store_config.js":"4","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/reducers/index.js":"5","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/actions/ftp_actions.js":"6","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/utils/constants.js":"7","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/utils/device_utils.js":"8","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/utils/structures.js":"9","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/reducers/reducer_device_settings.js":"10","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/actions/hid_actions.js":"11","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/containers/device.js":"12","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/reducers/reducer_sofrtware_update.js":"13","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/containers/device_info.js":"14","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/actions/get_device_data.js":"15","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/actions/get_software.js":"16","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/reducers/reducer_software_list.js":"17","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/containers/software_list.js":"18","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/reducers/reducer_make.js":"19","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/containers/make_list.js":"20","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/containers/software_search.js":"21","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/containers/year_list.js":"22","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/containers/transmission_option.js":"23","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/containers/model_list.js":"24","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/reducers/reducer_model.js":"25","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/reducers/reducer_year.js":"26","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/reducers/reducer_software_search.js":"27"},{"size":1457,"mtime":1626812019069,"results":"28","hashOfConfig":"29"},{"size":206,"mtime":1616697204167,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":1611692142606,"results":"31","hashOfConfig":"29"},{"size":263,"mtime":1616531933788,"results":"32","hashOfConfig":"29"},{"size":774,"mtime":1627413871107,"results":"33","hashOfConfig":"29"},{"size":1373,"mtime":1625671153858,"results":"34","hashOfConfig":"29"},{"size":5976,"mtime":1627501541092,"results":"35","hashOfConfig":"29"},{"size":22175,"mtime":1626898169938,"results":"36","hashOfConfig":"29"},{"size":13170,"mtime":1626897364174,"results":"37","hashOfConfig":"29"},{"size":9672,"mtime":1626891138337,"results":"38","hashOfConfig":"29"},{"size":7631,"mtime":1626889175856,"results":"39","hashOfConfig":"29"},{"size":16778,"mtime":1627485172800,"results":"40","hashOfConfig":"29"},{"size":7141,"mtime":1625852717181,"results":"41","hashOfConfig":"29"},{"size":5894,"mtime":1626902216992,"results":"42","hashOfConfig":"29"},{"size":4061,"mtime":1627498808838,"results":"43","hashOfConfig":"29"},{"size":4130,"mtime":1627501820287,"results":"44","hashOfConfig":"29"},{"size":496,"mtime":1627501576703,"results":"45","hashOfConfig":"29"},{"size":4114,"mtime":1627419874614,"results":"46","hashOfConfig":"29"},{"size":641,"mtime":1627410771154,"results":"47","hashOfConfig":"29"},{"size":1431,"mtime":1627503548758,"results":"48","hashOfConfig":"29"},{"size":4582,"mtime":1627502154545,"results":"49","hashOfConfig":"29"},{"size":1047,"mtime":1566859722000,"results":"50","hashOfConfig":"29"},{"size":1240,"mtime":1566859146000,"results":"51","hashOfConfig":"29"},{"size":953,"mtime":1493161544000,"results":"52","hashOfConfig":"29"},{"size":762,"mtime":1627501635825,"results":"53","hashOfConfig":"29"},{"size":916,"mtime":1627501770082,"results":"54","hashOfConfig":"29"},{"size":2901,"mtime":1627502243358,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"cf1yyq",{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":35,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/index.js",[],["117","118"],"/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/App.js",["119"],"import logo from './logo.svg';\nimport './App.css';\nimport Device from './containers/device';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Device />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/reportWebVitals.js",[],"/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/utils/store_config.js",[],"/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/reducers/index.js",[],"/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/actions/ftp_actions.js",["120","121"],"import axios from 'axios';\nimport CryptoJS from 'crypto-js';\nimport {    WEB_SERVICES_URL } from '../utils/constants';\nimport {    FTP_LOAD_PROGRESS,\n            FTP_LOAD_SUCCESS,\n            FTP_LOAD_FAILURE,\n            START_SOFTWARE_UPDATE }  from '../utils/constants';\n\n\n//const ROOT_URL = \"https://tranquil-mesa-29755.herokuapp.com/ftpload\";\nconst ROOT_URL = WEB_SERVICES_URL + \"/v1/ftpload\";\n//const ROOT_URL = \"http://dashconnectplus.com/wp-content/themes/DashConnectPlus/dc_ftp_file_get.php\"\n\nexport function loadFTPFile(sw_id){\n  const url = ROOT_URL + \"?sw_id=\" + sw_id;\n  const request = axios.get(url);\n\n  //console.log('URL', url);\n  //console.log('sw_id', sw_id);\n  return (dispatch) => {\n    dispatch( { type: FTP_LOAD_PROGRESS, payload: \"\" } );\n    request.then( ({data}) =>{\n      let words  = CryptoJS.enc.Base64.parse(data.file);\n      let fileMD5 = CryptoJS.MD5(words).toString();\n      console.log(data);\n      console.log(fileMD5);\n      if(fileMD5 == data.md5){\n        console.log(\"MD5 calculation is correct\");\n\n        dispatch( { type: FTP_LOAD_SUCCESS, payload: data } );\n      }else{\n        console.log(\"MD5 calculation not correct\");\n        dispatch( { type: FTP_LOAD_FAILURE, payload: \"File load failed check sum\" } );\n      }\n    },\n    error => {\n      dispatch( { type: FTP_LOAD_FAILURE, payload: \"File Load failed\" } );\n    });\n\n  };\n}","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/utils/constants.js",[],"/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/utils/device_utils.js",["122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140"],"import { TRANSFER_SET_UP_DATA_RESPONSE ,\n         TRANSFER_STATUS_DATA_RESPONSE } from '../utils/structures';\n\nimport { DEVICE_APP_STATUS, DEVICE_SBL_STATUS} from '../utils/constants';\n\nexport function setDeviceSettings(data, settings){\n  let device_data = data;\n  //byte 1\n  let byte1 = \"\";\n  byte1 = settings[\"SoundSupported\"] + byte1;\n  byte1 = settings[\"ObdSupported\"] + byte1;\n  byte1 = settings[\"ConfigSupported\"] + byte1;\n  byte1 = settings[\"RearCameraSupported\"] + byte1;\n  byte1 = settings[\"FrontCameraSupported\"] + byte1;\n  byte1 = settings[\"LeftCameraSupported\"] + byte1;\n  byte1 = settings[\"RightCameraSupported\"] + byte1;\n  byte1 = settings[\"ReservedSupported\"] + byte1;\n  //console.log(byte1);\n  //byte 2\n  let byte2 = \"\";\n  byte2 = settings[\"SoundEnabled\"] + byte2;\n  byte2 = settings[\"RearCameraEnabled\"] + byte2;\n  byte2 = settings[\"FrontCameraEnabled\"] + byte2;\n  byte2 = settings[\"LeftCameraEnabled\"] + byte2;\n  byte2 = settings[\"RightCameraEnabled\"] + byte2;\n  byte2 = settings[\"FactoryRearCamera\"] + byte2;\n  byte2 = settings[\"FactoryFrontCamera\"] + byte2;\n  byte2 = settings[\"FactoryLeftCamera\"] + byte2;\n  //console.log(byte2);\n  //byte_3;\n  let byte3 = \"\";\n  byte3 = settings[\"HDMIEnabled\"] + byte3;\n  byte3 = settings[\"RGBEnabled\"] + byte3;\n  byte3 = settings[\"Input1Enabled\"] + byte3;\n  byte3 = settings[\"Input2Enabled\"] + byte3;\n  byte3 = settings[\"Input3Enabled\"] + byte3;\n  byte3 = settings[\"Input4Enabled\"] + byte3;\n  byte3 = settings[\"NotUsed\"] + byte3;\n  //console.log(byte3);\n  //byte_4;\n  let byte4 = \"\";\n  byte4 = settings[\"FactoryRightCamera\"] + byte4;\n  byte4 = settings[\"FrontCameraMode\"] + byte4;\n  byte4 = settings[\"SideCameraMode\"] + byte4;\n  byte4 = settings[\"ResrvedBits\"] + byte4;\n  //console.log(byte4);\n  //byte_5;\n  let byte5 = \"\";\n  byte5 = settings[\"IsDefaultSettings\"] + byte5;\n  byte5 = settings[\"VideoInputs\"] + byte5;\n  byte5 = settings[\"VIMCapacity\"] + byte5;\n  byte5 = settings[\"RGBCapacity\"] + byte5;\n  byte5 = settings[\"HDMICapacity\"] + byte5;\n  byte5 = settings[\"ParkingLinesDisabled\"] + byte5;\n\n  //byte 6  \n  let byte6 = \"\";\n  byte6 = settings[\"ScreenSize\"] + byte6;\n  byte6 = settings[\"CSyncPolarity\"] + byte6;\n  byte6 = settings[\"SOGEnabled\"] + byte6;\n  byte6 = settings[\"VIMEnabled\"] + byte6; \n\n\n  //byte 7\n  let byte7 = \"\";\n  byte7 = settings[\"VideoSize1\"] + byte7;\n  byte7 = settings[\"VideoSize2\"] + byte7;\n  byte7 = settings[\"VideoSize3\"] + byte7;\n  byte7 = settings[\"VideoSize4\"] + byte7; \n  \n  //byte 8\n  let byte8 = \"\";\n  byte8 = settings[\"VideoFunction1\"] + byte8;\n  byte8 = settings[\"VideoFunction2\"] + byte8;\n  byte8 = settings[\"VideoFunction3\"] + byte8;\n  byte8 = settings[\"VideoFunction4\"] + byte8; \n\n\n  device_data[21] = parseInt(byte1,2);\n  device_data[22] = parseInt(byte2,2);\n  device_data[23] = parseInt(byte3,2);\n  device_data[24] = parseInt(byte4,2);\n  device_data[25] = parseInt(byte5,2);\n  device_data[26] = parseInt(byte6,2);\n  device_data[27] = parseInt(byte7,2);\n  device_data[28] = parseInt(byte8,2);\n  \n  let result = [];\n  result[0] = 0x00;\n  result[1] = 0x1B;\n  for(var i = 0; i < 43; i++){\n    result[2 + i] =   device_data[21 + i];\n  }\n  //console.log(result);\n  //console.log(result.length);\n  return result;\n}\n\nexport function setDeviceOSDSettings(settings){\n\n  //byte 1\n  let byte1 = \"\";\n  byte1 = settings[\"OsdCVBS1\"] + byte1;\n  byte1 = settings[\"OsdCVBS2\"] + byte1;\n  byte1 = settings[\"OsdCVBS3\"] + byte1;\n  byte1 = settings[\"OsdCVBS4\"] + byte1;\n\n  //console.log(byte1);\n  //byte 2\n  let byte2 = \"\";\n  byte2 = settings[\"TextMenuHDMI\"] + byte2;\n  byte2 = settings[\"TextMenuRGB\"] + byte2;\n  byte2 = settings[\"TextMenuCh1\"] + byte2;\n  byte2 = settings[\"TextMenuCh2\"] + byte2;\n  //console.log(byte2);\n  //byte_3;\n  let byte3 = \"\";\n  byte3 = settings[\"TextMenuCh3\"] + byte3;\n  byte3 = settings[\"TextMenuCh4\"] + byte3;\n  byte3 = settings[\"Reserved2\"] + byte3;\n  //console.log(byte3);\n  //byte_4;\n  let byte4 = settings[\"Reserved3\"];\n  //console.log(byte4);\n\n  let result = [];\n  result[0] = 0x00;\n  result[1] = 0x66;\n  result[2] = settings[\"BackgroundColor\"];\n  result[3] = settings[\"TextColor\"];\n  result[4] = settings[\"HighlightColor\"];\n  result[5] = settings[\"Reserved1\"];\n  result[6] = parseInt(byte1,2);\n  result[7] = parseInt(byte2,2);\n  result[8] = parseInt(byte3,2);\n  result[9] = parseInt(byte4,2);\n\n  //console.log(result);\n  //console.log(result.length);\n  return result;\n}\n\nexport function setDeviceOBDSettings(settings){\n  console.log(\"OBD Settings \", settings);\n  //byte 1\n  let byte1 = \"\";\n  byte1 = settings[\"obd_feature_idx1\"] + byte1;\n  byte1 = settings[\"obd_feature_idx2\"] + byte1;\n  byte1 = settings[\"obd_feature_idx3\"] + byte1;\n  byte1 = \"00000\" + byte1;\n\n  console.log(byte1);\n\n  let result = [];\n  result[0] = 0x00;\n  result[1] = 0x61;\n  result[2] = parseInt(byte1,2);\n\n  console.log(result);\n  //console.log(result.length);\n  return result;\n}\n\nexport function getDeviceData(deviceData){\n  let bareNum;\n  let serial_number = \"\";\n  let hexStringFrmt = \"00\"\n  for (var i = 0; i < 16; i++) {\n    if (i % 4 == 0 && i > 0) {\n      serial_number += \"-\";\n    }\n    bareNum = deviceData[3+i].toString(16);\n    serial_number += hexStringFrmt.substring((bareNum).length, 2) + bareNum;\n  }\n\n  let serialNumber = serial_number.toUpperCase();\n\n  //19 20 21  22 Part ID (Example F0 01 D8 30)\n  let partId = \"\"; //[22][23][24][25] Part ID (Example F0 01 D8 30)\n  let hexSoftwareId = \"\"; //[20][19]\n  let hexSoftwareBuild = \"\" // [22]\n  let bootloaderMode = \"\";\n  let apiVersion = false;\n\n  for(var i=0; i < 2; i++){\n    //console.log(msg[19-i]);\n    bareNum = deviceData[20-i].toString(16);\n    hexSoftwareId += hexStringFrmt.substring((bareNum).length, 2) + bareNum;\n    //console.log(softwareId);\n\n  }\n  console.log(\"Software Id: \", parseInt(hexSoftwareId, 16));\n\n  //build siftwareBuild\n  bareNum = deviceData[21].toString(10);\n  hexSoftwareBuild += hexStringFrmt.substring((bareNum).length, 2) + bareNum;\n  console.log(\"Software Build\",parseInt(hexSoftwareBuild, 16));\n  var softwareId = parseInt(hexSoftwareId, 16);\n  var softwareBuild = parseInt(hexSoftwareBuild, 16);\n\n\n  for(var i=0; i < 4; i++){\n    //console.log(msg[19-i]);\n    bareNum = deviceData[25-i].toString(16);\n    partId += hexStringFrmt.substring((bareNum).length, 2) + bareNum;\n    //console.log(softwareId);\n\n  }\n  partId = partId.toUpperCase();\n  console.log(\"Part Id: \", partId);\n  \n  //bootloader mode - 26\n  bareNum = deviceData[26].toString(10);\n  if(parseInt(hexStringFrmt.substring((bareNum).length, 2) + bareNum) == 0){\n    bootloaderMode = DEVICE_SBL_STATUS;\n  }else{\n    bootloaderMode = DEVICE_APP_STATUS;\n  };\n  console.log('Bootloader Mode: ', bareNum);\n  console.log('Bootloader Mode: ', bootloaderMode);\n\n  //api version - 29\n  bareNum = deviceData[29].toString(10);\n  apiVersion = parseInt(hexStringFrmt.substring((bareNum).length, 2) + bareNum);\n  console.log(apiVersion)\n  return { serialNumber, partId, softwareId, softwareBuild, bootloaderMode, apiVersion };\n}\n\nexport function getSerialNumber(msg){\n  let bareNum;\n  let serial_number = \"\";\n  let hexStringFrmt = \"00\"\n  for (var i = 0; i < 16; i++) {\n    if (i % 4 == 0 && i > 0) {\n      serial_number += \"-\";\n    }\n    bareNum = msg[3+i].toString(16);\n    serial_number += hexStringFrmt.substring((bareNum).length, 2) + bareNum;\n  }\n  return serial_number.toUpperCase();\n}\n\nexport function getSoftwareId(msg){\n      let hexStringFrmt = \"00\"\n      let binaryStringFrmt = \"00000000\"\n      let hexSoftwareId = \"\"; //[20][19]\n      let hexSoftwareBuild = \"\"\n      let bareNum;\n\n      for(var i=0; i < 2; i++){\n        //console.log(msg[19-i]);\n        bareNum = msg[19-i].toString(16);\n        hexSoftwareId += hexStringFrmt.substring((bareNum).length, 2) + bareNum;\n        //console.log(softwareId);\n\n      }\n      console.log(\"Software Id: \", parseInt(hexSoftwareId, 16));\n      //build siftwareBuild\n      bareNum = msg[21].toString(10);\n      hexSoftwareBuild += hexStringFrmt.substring((bareNum).length, 2) + bareNum;\n      console.log(\"Software Build\",parseInt(hexSoftwareBuild, 16));\n      var softwareId = parseInt(hexSoftwareId, 16);\n      var softwareBuild = parseInt(hexSoftwareBuild, 16);\n      return { softwareId, softwareBuild};\n}\n\nexport function checkOBDSupport(msg){\n      let hexStringFrmt = \"00\"\n      let binaryStringFrmt = \"00000000\"\n      let softwareId = \"\"; //[19][18]\n      let bareNum;\n      let OBDSupported;\n      let result = {};\n\n      for(var i=0; i < 2; i++){\n        //console.log(msg[19-i]);\n        bareNum = msg[19-i].toString(16);\n        softwareId += hexStringFrmt.substring((bareNum).length, 2) + bareNum;\n        //console.log(softwareId);\n\n      }\n      //console.log(\"Software Id\",softwareId);\n      //console.log(\"Software Id\",parseInt(softwareId,16));\n\n      //console.log(\"System Settings Byte 1\", binaryStringFrmt.substring((msg[21].toString(2)).length, 8) + msg[21].toString(2));\n      let byte_1 = binaryStringFrmt.substring((msg[21].toString(2)).length, 8) + msg[21].toString(2);\n\n\n      OBDSupported = byte_1.substring(6,7); \n      //console.log(\"OBDSupported\", OBDSupported) ;\n      if(OBDSupported == \"0\"){\n        result.isOBDSupported = true;\n        result.softwareId = parseInt(softwareId,10);\n      }else{\n        result.isOBDSupported = false;\n      }\n      return result;\n}\n\nexport function setCanFilterMessage(msg){\n  console.log(\"inside setFilter\", msg);\n  const SET_CAN_DATA_ID = 0x90;\n  let hexStringFrmt = \"00000000\"\n  let arrayMsg = [];\n\n  let result = hexStringFrmt.substring((msg).length, 8) + msg;\n  console.log(result);\n  console.log(result.match(/.{1,2}/g));\n  console.log(result.match(/.{1,2}/g).map((num)=>{return parseInt(num,16);}));\n  arrayMsg = arrayMsg.concat(\n    result.match(/.{1,2}/g).map((num)=>{return parseInt(num,16);})\n  );\n  //console.log(arrayMsg.reverse());\n  let reverseArray = arrayMsg.reverse();\n  console.log(reverseArray);\n  console.log(arrayMsg);\n  reverseArray.unshift(0x00, SET_CAN_DATA_ID);\n  console.log(reverseArray);\n  return reverseArray;\n}\n\nexport function setVehicleInfo(settings, info){\n  var vehicle_make = info.vehicle_make;\n  var vehicle_model = info.vehicle_model;\n  settings[57] = vehicle_make.length; //store vehicle make length\n  settings[58] = vehicle_model.length; // store vehicle model length\n  for (var i = 0; i < vehicle_make.length; i++) {\n    settings[29 + i] = vehicle_make.charCodeAt(i);\n  }\n  settings[29 + i] = 0; //terminate vehicle name\n\n  for (var i = 0; i < vehicle_model.length; i++) {\n    settings[43 + i] = vehicle_model.charCodeAt(i);\n  }\n  settings[43 + i] = 0; //terminate vehicle model\n\n  var vihicleMake = \"\";\n  var vihicleModel = \"\";\n  for (var i = 0; i < settings[57]; i++) {\n    vihicleMake += String.fromCharCode(settings[29+i]);\n  }\n  for (var i = 0; i < settings[58]; i++) {\n    vihicleModel += String.fromCharCode(settings[43+i]);\n  }\n  //console.log(vihicleMake);\n  //console.log(vihicleModel);\n  let result = [];\n  result[0] = 0x00;\n  result[1] = 0x1B;\n  for(var i = 0; i < 43; i++){\n    result[2 + i] =   settings[21 + i];\n  }\n  //console.log(result);\n  return result;\n}\n\nexport function setUpPacketData(update_data){\n  const SEND_PACKET_DATA = 0x04;\n  //convert number to hex string num.toString(16);\n  //then split in chunks of 2. string.match(/.{1,2}/g)\n  let doubleStringFrmt = \"0000\";\n  let hex;\n  let result = \"\"\n  let arrayMsg = [];\n  arrayMsg.push(SEND_PACKET_DATA);\n  hex = update_data.current_block.toString(16);\n  result = doubleStringFrmt.substring((hex).length, 4) + hex;\n  arrayMsg = arrayMsg.concat(\n    result.match(/.{1,2}/g).map((num)=>{return parseInt(num,16);}).reverse()\n  );\n  hex = update_data.current_packet.toString(16);\n  result = doubleStringFrmt.substring((hex).length, 4) + hex;\n  arrayMsg = arrayMsg.concat(\n    result.match(/.{1,2}/g).map((num)=>{return parseInt(num,16);}).reverse()\n  );\n  ////console.log(\"Array Data\",update_data);\n  ////console.log(\"setUpPacketData\", update_data);\n  arrayMsg = arrayMsg.concat(update_data.current_packet_data);\n  ////console.log(arrayMsg);\n  return arrayMsg;\n}\n\nexport function setUpTransferData(update_data){\n  //var blockSize = 256; //2 bytes\n  //var totalBlocks = 500; //2 bytes\n  //var packetSize = 16; //1 byte\n  //var startSector = 2; //1 byte\n  //var totalSectors = 20; //1 byte\n\n  const SETUP_DATA_TRANSFER = 0x02;\n  //convert number to hex string num.toString(16);\n  //then split in chunks of 2. string.match(/.{1,2}/g)\n  let byteStringFrmt = \"00\";\n  let doubleStringFrmt = \"0000\";\n  let hex;\n  let result = \"\"\n  let arrayMsg = [];\n  arrayMsg.push(SETUP_DATA_TRANSFER);\n  hex = update_data.block_size.toString(16);\n  result = doubleStringFrmt.substring((hex).length, 4) + hex;\n  //console.log(result);\n  //console.log(result.match(/.{1,2}/g));\n  //console.log(result.match(/.{1,2}/g).map((num)=>{return parseInt(num,16);}));\n  arrayMsg = arrayMsg.concat(\n    result.match(/.{1,2}/g).map((num)=>{return parseInt(num,16);}).reverse()\n  );\n  //console.log(arrayMsg);\n  hex = update_data.blocks_count.toString(16);\n  result = doubleStringFrmt.substring((hex).length, 4) + hex;\n  arrayMsg = arrayMsg.concat(\n    result.match(/.{1,2}/g).map((num)=>{return parseInt(num,16);}).reverse()\n  );\n  //console.log(arrayMsg);\n  arrayMsg.push(update_data.packet_size);\n  arrayMsg.push(update_data.start_sector);\n  arrayMsg.push(update_data.total_secotrs);\n  //console.log(arrayMsg);\n  return arrayMsg;\n  //ipcRenderer.send('device-write_data', arrayMsg);\n}\n\nexport function setUpBulkTransferData(update_data){\n  const SETUP_BULK_DATA_TRANSFER = 0x02;\n\n  let currentSector = update_data.current_sector;\n  console.log(currentSector);\n  let currentSectorData = update_data.sectors_data[currentSector];\n  console.log(currentSectorData);\n  let totalPages = parseInt(currentSectorData.pageEnd) - parseInt(currentSectorData.pageStart) + 1; \n  let arrayMsg = [SETUP_BULK_DATA_TRANSFER, totalPages];\n  return arrayMsg;\n\n}\n\nexport function setUpBulkSectorWrite(update_data){\n  const BULK_SECTOR_WRITE = 0x07;\n\n  let currentSector = update_data.current_sector;\n  console.log(currentSector);\n  let currentSectorData = update_data.sectors_data[currentSector];\n  console.log(currentSectorData);\n  let totalPages = parseInt(currentSectorData.pageEnd) - parseInt(currentSectorData.pageStart) + 1; \n  let arrayMsg = [BULK_SECTOR_WRITE, parseInt(currentSectorData.sectorNumber), parseInt(currentSectorData.pageStart), parseInt(currentSectorData.pageEnd)];\n  console.log(arrayMsg);\n  return arrayMsg;\n\n}\n\nexport function getBulkTransfterCheckSum(deviceData){\n  let byteStringFrmt = \"00\";\n  let hex;\n  let res;\n  let packetsum = \"\";\n  deviceData.slice(1,5).reverse().forEach((num) =>{\n    hex = num.toString(16);\n    res = byteStringFrmt.substring(hex.length, 2) + hex;\n    packetsum += res;\n  });\n  let packetSumInt = parseInt(packetsum,16);\n  console.log('getBulkTransfterCheckSum sum: ', packetSumInt);\n  return packetSumInt;\n}\nexport function getBulkWriteSectorResult(deviceData){\n  let writeResult = deviceData[1];\n  let errorCode = deviceData[2];\n  return { writeResult, errorCode };\n}\n\nexport function getInputSettings(deviceData){\n  \n    let rear_front = \"00000000\".substring((deviceData[4].toString(2)).length, 8) + deviceData[4].toString(2);\n    let left_right = \"00000000\".substring((deviceData[5].toString(2)).length, 8) + deviceData[5].toString(2);\n    let rearCamera = parseInt(rear_front.substring(4), 2).toString();\n    let frontCamera = parseInt(rear_front.substring(0,4), 2).toString();\n    let leftCamera = parseInt(left_right.substring(4), 2).toString();\n    let rightCamera = parseInt(left_right.substring(0,4), 2).toString();\n    let miscSetting = \"00000000\".substring((deviceData[7].toString(2)).length, 8) + deviceData[7].toString(2);\n    console.log(miscSetting);\n    let activationWire = miscSetting.substring(5,6);\n    let audioFeedback = miscSetting.substring(6,7);\n    let autoSwitch = miscSetting.substring(7);\n    let inputs = {rearCamera, frontCamera, leftCamera, rightCamera, autoSwitch, audioFeedback, activationWire};\n    console.log(inputs);\n    return inputs;\n    /*\n    console.log('Rear and Front: ', rf);\n    console.log('Left and Right: ', lr);\n    console.log('rear: ', rf.substring(4), parseInt(rf.substring(4), 2));\n    console.log('front: ', rf.substring(0,4), parseInt(rf.substring(0,4), 2));\n    console.log('left: ', lr.substring(4), parseInt(lr.substring(4), 2));\n    console.log('right: ', lr.substring(0,4), parseInt(lr.substring(0,4), 2));  \n    */\n}\n\nexport function prepareInputSettings(deviceData){\n  let result = [];\n  let cameraBits = \"0000\";\n  result[0] = 0x91;\n  result[1] = 0x01;\n  result[2] = 0xFF; // default for HDMI and Phone  alwas 255\n\n  \n  let rearCamera = parseInt(deviceData['rearCamera']).toString(2);\n  console.log(rearCamera);\n  let rearCameraBits = cameraBits.substring((rearCamera).length, 4) + rearCamera;\n  let frontCamera = parseInt(deviceData['frontCamera']).toString(2);\n  console.log(frontCamera);\n  let frontCameraBits = cameraBits.substring((frontCamera).length, 4) + frontCamera;\n  console.log(rearCameraBits, frontCameraBits);\n  let front_rear = frontCameraBits + rearCameraBits;\n  console.log (front_rear, parseInt(front_rear,2));\n  result[3] = parseInt(front_rear,2);\n \n  let leftCamera = parseInt(deviceData['leftCamera']).toString(2);\n  console.log(leftCamera);\n  let leftCameraBits = cameraBits.substring((leftCamera).length, 4) + leftCamera;\n  let rightCamera = parseInt(deviceData['rightCamera']).toString(2);\n  console.log(rightCamera);\n  let rightCameraBits = cameraBits.substring((rightCamera).length, 4) + rightCamera;\n  console.log(leftCameraBits, rightCameraBits);\n  let right_left = rightCameraBits + leftCameraBits;\n  console.log (right_left, parseInt(right_left,2));\n  result[4] = parseInt(right_left,2);\n\n  result[5] = 0xFF; //reserved\n\n  let miscSetting = \"11111\" + deviceData['activationWire'] + deviceData['audioFeedback'] + deviceData['autoSwitch'];\n  console.log('miscSetting:', miscSetting);\n  result[6] = parseInt(miscSetting,2); //temp to test\n\n\n  return result;\n}\n\nexport function parseTransferDataResponse(data){\n  //var block_size - 2 bytes\n  //var total_blocks - 2 bytes\n  //var packet_size - 1 byte\n  //var start_sector - 1 byte\n  //var total_secotrs - 1 byte\n\n  var data_setup_response = JSON.parse(JSON.stringify(TRANSFER_SET_UP_DATA_RESPONSE));\n  //convert number to hex string num.toString(16);\n  //then split in chunks of 2. string.match(/.{1,2}/g)\n  let byteStringFrmt = \"00\";\n  let doubleStringFrmt = \"0000\";\n  let hex;\n  let res;\n  var block_size = \"\";\n  var total_blocks = \"\";\n  data.slice(1,3).reverse().forEach((num) =>{\n                hex = num.toString(16);\n                res = byteStringFrmt.substring(hex.length, 2) + hex;\n                block_size += res;\n  });\n  data_setup_response.block_size = parseInt(block_size,16);\n\n  data.slice(3,5).reverse().forEach((num) =>{\n                hex = num.toString(16);\n                res = byteStringFrmt.substring(hex.length, 2) + hex;\n                total_blocks += res;\n  });\n\n  data_setup_response.blocks_count = parseInt(total_blocks,16);\n  data_setup_response.packet_size = data.slice(5,6)[0];\n  data_setup_response.start_sector = data.slice(6,7)[0];\n  data_setup_response.total_secotrs = data.slice(7,8)[0];\n  return data_setup_response;\n\n}\n\nexport function parsePacketDataResponse(data){\n  //var block_number - 2 bytes\n  //var packet_number - 2 bytes\n  //var remaining_packets - 1 byte\n\n\n  var data_packet_response = JSON.parse(JSON.stringify(TRANSFER_STATUS_DATA_RESPONSE));\n  //convert number to hex string num.toString(16);\n  //then split in chunks of 2. string.match(/.{1,2}/g)\n  let byteStringFrmt = \"00\";\n  let doubleStringFrmt = \"0000\";\n  let hex;\n  let res;\n  var block_number = \"\";\n  var packet_number = \"\";\n  var remaining_packets = \"\";\n  var check_sum = \"\";\n  data.slice(1,3).reverse().forEach((num) =>{\n                hex = num.toString(16);\n                res = byteStringFrmt.substring(hex.length, 2) + hex;\n                block_number += res;\n  });\n  data_packet_response.block_number = parseInt(block_number,16);\n\n  data.slice(3,5).reverse().forEach((num) =>{\n                hex = num.toString(16);\n                res = byteStringFrmt.substring(hex.length, 2) + hex;\n                packet_number += res;\n  });\n  data_packet_response.packet_number = parseInt(packet_number,16);\n\n  data.slice(5,7).reverse().forEach((num) =>{\n                hex = num.toString(16);\n                res = byteStringFrmt.substring(hex.length, 2) + hex;\n                remaining_packets += res;\n  });\n  data_packet_response.remaining_packets = parseInt(remaining_packets,16);\n\n  if(data_packet_response.remaining_packets == 0){\n    data.slice(7,11).reverse().forEach((num) =>{\n                  hex = num.toString(16);\n                  res = byteStringFrmt.substring(hex.length, 2) + hex;\n                  check_sum += res;\n    });\n    data_packet_response.check_sum = parseInt(check_sum,16);\n  }else{\n    data_packet_response.check_sum = 0;\n  }\n\n  return data_packet_response;\n\n}\n\nexport function parseSectorWriteResponse(data){\n  let byteStringFrmt = \"00\";\n  let doubleStringFrmt = \"0000\";\n  let hex;\n  let res;\n  var write_response = \"\";\n  data.slice(1,3).reverse().forEach((num) =>{\n                hex = num.toString(16);\n                res = byteStringFrmt.substring(hex.length, 2) + hex;\n                write_response += res;\n  });\n  return parseInt(write_response,16);\n}\n\nexport function setUpTransferStart(){\n  let arrayMsg = [];\n  const SETUP_TRANSFER_START = 0x03;\n  arrayMsg.push(SETUP_TRANSFER_START);\n  return arrayMsg;\n}\n\nexport function setUpBlockValidateData(){\n  let arrayMsg = [];\n  const SETUP_BLOCK_VALIDATE = 0x05;\n  arrayMsg.push(SETUP_BLOCK_VALIDATE);\n  return arrayMsg;\n}\n\nexport function setUpSectorWriteData(data){\n  let arrayMsg = [];\n  const SETUP_SECTOR_WRITE = 0x07;\n  arrayMsg.push(SETUP_SECTOR_WRITE, data.current_sector);\n  console.log(\"SETUP_SECTOR_WRITE\", arrayMsg);\n  return arrayMsg;\n}\n\nexport function parseOBDStatus(msg){\n  console.log(msg);\n  var obdReadStatus;\n  var obdStatus;\n  obdReadStatus = msg[1];\n  obdStatus = msg[2];\n  console.log(msg[1]);\n  console.log(msg[2]);\n  return { obdReadStatus, obdStatus};\n}\n\n","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/utils/structures.js",[],"/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/reducers/reducer_device_settings.js",["141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156"],"import { SYSTEM_SETTINGS } from '../utils/structures';\nimport { DEVICE_DATA_MCU, \n         DEVICE_DATA_SETTINGS, \n         DEVICE_DATA_INPUT_SETTINGS,\n         DEVICE_REMOVED,\n         DEVICE_NOT_SUPPORTED,\n         FETCH_DEVICE_DB_DATA,\n         UPDATE_SYSTEM_SETTINGS,\n         SET_SOFTWARE_DESCRIPTION } from '../utils/constants';\n\nimport {  getDeviceData,\n          getInputSettings } from '../utils/device_utils';\n\nexport default function(state = JSON.parse(JSON.stringify(SYSTEM_SETTINGS)), action){\n  let new_state = {};\n  let tmp_state = {};\n  let deviceData;\n  switch (action.type){\n    case DEVICE_DATA_MCU:\n        tmp_state = JSON.parse(JSON.stringify(state));\n        deviceData = action.payload;\n        //let deviceSettings = getDeviceData(deviceData);\n        console.log('in reducer DEVICE_DATA_MCU');\n        console.log(deviceData);\n        new_state = Object.assign({}, tmp_state, deviceData);\n        console.log(new_state);\n        return new_state;\n    case DEVICE_DATA_INPUT_SETTINGS:\n      tmp_state = JSON.parse(JSON.stringify(state));\n      deviceData = action.payload;\n      let inputSettings = getInputSettings(deviceData);\n      console.log('in reducer DEVICE_DATA_INPUT_SETTINGS');\n      console.log(inputSettings);\n      new_state = Object.assign({}, tmp_state, inputSettings);\n      console.log(new_state);\n      return new_state;\n    case FETCH_DEVICE_DB_DATA:\n      tmp_state = JSON.parse(JSON.stringify(state));\n      deviceData = action.payload;\n      console.log('in reducer FETCH_DEVICE_DB_DATA');\n      new_state = Object.assign({}, tmp_state, deviceData);\n      console.log(new_state);\n      return new_state;\n    case SET_SOFTWARE_DESCRIPTION:\n      tmp_state = JSON.parse(JSON.stringify(state));\n      deviceData = action.payload;\n      console.log('in reducer SET_SOFTWARE_DESCRIPTION');\n      new_state = Object.assign({}, tmp_state, deviceData);\n      console.log(new_state);\n    case UPDATE_SYSTEM_SETTINGS:   \n      tmp_state = JSON.parse(JSON.stringify(state));\n      console.log('in reducer UPDATE_SYSTEM_SETTINGS');\n      console.log(action.payload);\n      new_state = Object.assign({}, tmp_state, action.payload);\n      console.log(new_state);\n      return new_state;   \n    case DEVICE_DATA_SETTINGS:\n      //return state.concat([ action.payload.data ]);\n      //or (same crete new array). NEVER!!!!! mutate array\n      //console.log('Action recieved', DEVICE_DATA_SETTINGS);\n      //console.log(action.payload);\n\n       console.log('reducer_device_settings');\n\n      let msg = action.payload;\n      let zaction = msg[0];\n      let usbResult = msg[1];\n      let serial_number = \"\"\n      let hexStringFrmt = \"00\"\n      let binaryStringFrmt = \"00000000\"\n      let softwareId = \"\"; //[19][18]\n      let softwareBuild = \"\"; //[20]\n      let bareNum;\n      for (var i = 0; i < 16; i++) {\n        if (i % 4 == 0 && i > 0) {\n          serial_number += \"-\";\n        }\n        bareNum = msg[2+i].toString(16);\n        serial_number += hexStringFrmt.substring((bareNum).length, 2) + bareNum;\n      }\n      serial_number = serial_number.toUpperCase();\n      //console.log(\"Serial Number\",serial_number);\n      //build software id (reverse 2 bytes)\n      //for(var i=0; i < 2; i++){\n      //  bareNum = msg[19-i].toString(10);\n      //  softwareId += hexStringFrmt.substring((bareNum).length, 2) + bareNum;\n\n      //}\n      for(var i=0; i < 2; i++){\n        //console.log(msg[19-i]);\n        bareNum = msg[19-i].toString(16);\n        softwareId += hexStringFrmt.substring((bareNum).length, 2) + bareNum;\n        //console.log(softwareId);\n\n      }\n      //console.log(\"Software Id\",softwareId);\n      //console.log(\"Software Id\",parseInt(softwareId,16));\n      //build siftwareBuild\n      bareNum = msg[20].toString(10);\n      softwareBuild += hexStringFrmt.substring((bareNum).length, 2) + bareNum;\n      //console.log(\"Software Build\",softwareBuild);\n\n      //get system settings\n      let system_settings = JSON.parse(JSON.stringify(SYSTEM_SETTINGS));\n      //console.log(\"System Settings Byte 1\", binaryStringFrmt.substring((msg[21].toString(2)).length, 8) + msg[21].toString(2));\n      let byte_1 = binaryStringFrmt.substring((msg[21].toString(2)).length, 8) + msg[21].toString(2);\n      //console.log(\"System Settings Byte 2\", binaryStringFrmt.substring((msg[22].toString(2)).length, 8) + msg[22].toString(2));\n      let byte_2 = binaryStringFrmt.substring((msg[22].toString(2)).length, 8) + msg[22].toString(2);\n      //console.log(\"System Settings Byte 3\", binaryStringFrmt.substring((msg[23].toString(2)).length, 8) + msg[23].toString(2));\n      let byte_3 = binaryStringFrmt.substring((msg[23].toString(2)).length, 8) + msg[23].toString(2);\n      //console.log(\"System Settings Byte 4\", binaryStringFrmt.substring((msg[24].toString(2)).length, 8) + msg[24].toString(2));\n      let byte_4 = binaryStringFrmt.substring((msg[24].toString(2)).length, 8) + msg[24].toString(2);\n      //console.log(\"System Settings Byte 5\", binaryStringFrmt.substring((msg[25].toString(2)).length, 8) + msg[25].toString(2));\n      let byte_5 = binaryStringFrmt.substring((msg[25].toString(2)).length, 8) + msg[25].toString(2);\n      //console.log(\"System Settings Byte 6\", binaryStringFrmt.substring((msg[26].toString(2)).length, 8) + msg[26].toString(2));\n      let byte_6 = binaryStringFrmt.substring((msg[26].toString(2)).length, 8) + msg[26].toString(2);\n      //console.log(\"System Settings Byte 7\", binaryStringFrmt.substring((msg[27].toString(2)).length, 8) + msg[27].toString(2));\n      let byte_7 = binaryStringFrmt.substring((msg[27].toString(2)).length, 8) + msg[27].toString(2);\n      //console.log(\"System Settings Byte 8\", binaryStringFrmt.substring((msg[28].toString(2)).length, 8) + msg[28].toString(2));\n      let byte_8 = binaryStringFrmt.substring((msg[28].toString(2)).length, 8) + msg[28].toString(2);\n\n      console.log('Settings reducer XXXXXXXXXXXXXXXX');\n      //byte 1\n      system_settings[\"SoundSupported\"] = byte_1.substring(7,8);\n      system_settings[\"ObdSupported\"] = byte_1.substring(6,7);\n      system_settings[\"ConfigSupported\"] = byte_1.substring(5,6);\n      system_settings[\"RearCameraSupported\"] = byte_1.substring(4,5);\n      system_settings[\"FrontCameraSupported\"] = byte_1.substring(3,4);\n      system_settings[\"LeftCameraSupported\"] = byte_1.substring(2,3);\n      system_settings[\"RightCameraSupported\"] = byte_1.substring(1,2);\n      system_settings[\"ReservedSupported\"] = byte_1.substring(0,1);\n      //byte_2\n      system_settings[\"SoundEnabled\"] = byte_2.substring(7,8);\n      system_settings[\"RearCameraEnabled\"] = byte_2.substring(6,7);\n      system_settings[\"FrontCameraEnabled\"] = byte_2.substring(5,6);\n      system_settings[\"LeftCameraEnabled\"] = byte_2.substring(4,5);\n      system_settings[\"RightCameraEnabled\"] = byte_2.substring(3,4);\n      system_settings[\"FactoryRearCamera\"] = byte_2.substring(2,3);\n      system_settings[\"FactoryFrontCamera\"] = byte_2.substring(1,2);\n      system_settings[\"FactoryLeftCamera\"] = byte_2.substring(0,1);\n      //byte_3;\n      system_settings[\"HDMIEnabled\"] = byte_3.substring(7,8);\n      system_settings[\"RGBEnabled\"] = byte_3.substring(6,7);\n      system_settings[\"Input1Enabled\"] = byte_3.substring(5,6);\n      system_settings[\"Input2Enabled\"] = byte_3.substring(4,5);\n      system_settings[\"Input3Enabled\"] = byte_3.substring(3,4);\n      system_settings[\"Input4Enabled\"] = byte_3.substring(2,3);\n      system_settings[\"NotUsed\"] = byte_3.substring(0,2);\n      //byte_4;\n      system_settings[\"FactoryRightCamera\"] = byte_4.substring(7,8);\n      system_settings[\"FrontCameraMode\"] = byte_4.substring(5,7);\n      system_settings[\"SideCameraMode\"] = byte_4.substring(2,5);\n      system_settings[\"ResrvedBits\"] = byte_4.substring(0,2);\n      //byte 5\n      system_settings[\"IsDefaultSettings\"] = byte_5.substring(7,8);\n      system_settings[\"VideoInputs\"] = byte_5.substring(4,7);\n      system_settings[\"VIMCapacity\"] = byte_5.substring(3,4);\n      system_settings[\"RGBCapacity\"] = byte_5.substring(2,3);\n      system_settings[\"HDMICapacity\"] = byte_5.substring(1,2);\n      system_settings[\"ParkingLinesDisabled\"] = byte_5.substring(0,1);\n      //byte 6\n      system_settings[\"ScreenSize\"] = byte_6.substring(4,8);\n      system_settings[\"CSyncPolarity\"] = byte_6.substring(2,4);\n      system_settings[\"SOGEnabled\"] = byte_6.substring(1,2);\n      system_settings[\"VIMEnabled\"] = byte_6.substring(0,1);\n      //byte 7\n      system_settings[\"VideoSize1\"] = byte_7.substring(6,8);\n      system_settings[\"VideoSize2\"] = byte_7.substring(4,6);\n      system_settings[\"VideoSize3\"] = byte_7.substring(2,4);\n      system_settings[\"VideoSize4\"] = byte_7.substring(0,2);\n      //byte 8\n      system_settings[\"VideoFunction1\"] = byte_8.substring(6,8);\n      system_settings[\"VideoFunction2\"] = byte_8.substring(4,6);\n      system_settings[\"VideoFunction3\"] = byte_8.substring(2,4);\n      system_settings[\"VideoFunction4\"] = byte_8.substring(0,2);\n\n      console.log(\"SYSTEM SETTINGS: \", system_settings);\n\n      var vihicleMake = \"\";\n      var vihicleModel = \"\";\n      for (var i = 0; i < msg[57]; i++) {\n        vihicleMake += String.fromCharCode(msg[29+i]);\n      }\n      for (var i = 0; i < msg[58]; i++) {\n        vihicleModel += String.fromCharCode(msg[43+i]);\n      }\n      //console.log(vihicleMake);\n      //console.log(vihicleModel);\n      for (var i = 0; i < 14; i++) {\n        //console.log(vihicleModel.charCodeAt(i));\n      }\n      return system_settings;\n\n    case DEVICE_REMOVED:\n      return JSON.parse(JSON.stringify(SYSTEM_SETTINGS));\n    case DEVICE_NOT_SUPPORTED:\n      return JSON.parse(JSON.stringify(SYSTEM_SETTINGS));\n  }\n  return state;\n}\n","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/actions/hid_actions.js",["157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191"],"import {    DEVICE_DATA_MCU, \n            DEVICE_DATA_INPUT_SETTINGS, \n            DEVICE_REMOVED,\n            DEVICE_NOT_SUPPORTED } from '../utils/constants';\n\nimport {    SET_UP_TRANSFER, \n            SET_UP_BULK_TRANSFER,\n            START_TRANSFER,\n            START_BULK_TRANSFER,\n            BULK_UPDATE_IN_PROGRESS,\n            BULK_UPDATE_SECTOR_VALIDATE,\n            BULK_SECTOR_WRITE_IN_PROGRESS,\n            BULK_SECTOR_WRITE,\n            BULK_SECTOR_WRITE_RESULT,\n            PACKET_SEND,\n            REQUEST_PACKET_SEND,\n            SECTOR_WRITE,\n            BLOCK_VALIDATE,\n            REQUEST_VALIDATE_BLOCK_SEND_RESPONSE,\n            REQUEST_VALIDATE_BLOCK_SEND,\n            REQUEST_SECTOR_WRITE_SEND,\n            REQUEST_SECTOR_WRITE_SEND_RESPONSE,\n            REQUEST_PACKET_SEND_RESPONSE,\n            REQUEST_DATA_SETUP,\n            REQUEST_DATA_SETUP_RESPONSE,\n            REQUEST_TRANSFER_START,\n            REQUEST_TRANSFER_START_RESPONSE } from '../utils/constants';\n\n\nimport { getSerialNumber,\n    checkOBDSupport,\n    getSoftwareId,\n    setDeviceSettings,\n    setDeviceOSDSettings,\n    setDeviceOBDSettings,\n    setVehicleInfo,\n    setUpTransferData,\n    setUpBulkTransferData,\n    getBulkTransfterCheckSum,\n    setUpBulkSectorWrite,\n    getBulkWriteSectorResult,\n    prepareInputSettings,\n    getDeviceData,\n    parseTransferDataResponse,\n    setUpTransferStart,\n    setUpPacketData,\n    parsePacketDataResponse,\n    setUpBlockValidateData,\n    parseSectorWriteResponse,\n    setUpSectorWriteData,\n    parseOBDStatus,\n    setCanFilterMessage,} from '../utils/device_utils';\n\nimport { fetchDeviceDBData  } from './get_device_data';\n\nexport function handleDeviceDataResult(deviceData){\n    let action;\n    let usbResult; \n    let result;\n    return (dispatch) => {\n        if(deviceData != undefined){\n            action = deviceData[0];\n        }\n        //console.log('action: ', action);\n        switch(action) {\n            case 0x90: //READ_CONFIG\n                let subAction =  deviceData[1];\n                switch(subAction){\n                    case 0x00: //READ_MCU\n                        let deviceSettings = getDeviceData(deviceData);\n                        dispatch(fetchDeviceDBData(deviceSettings));\n                        dispatch({\n                            type: DEVICE_DATA_MCU,\n                            payload: deviceSettings\n                        });\n                    break;\n                    case 0x01: //INPUT_CONGIG\n                        console.log('DEVICE_DATA_SETTINGS in handleDeviceDataResult');\n                        dispatch({\n                            type: DEVICE_DATA_INPUT_SETTINGS,\n                            payload: deviceData\n                        });\n                    break;\n                }\n                break;\n            case 0x20: //SETUP_DATA_TRANSFER_RESPONSE || BL_START_BULK_RESPONSE\n                //console.log('SETUP_DATA_TRANSFER_RESPONSE');\n                console.log('BL_START_BULK_RESPONSE');\n                //result = parseTransferDataResponse(deviceData);\n                //console.log(result);\n                dispatch({\n                    type: START_BULK_TRANSFER,\n                    payload: \"\"\n                  });\n                break;\n            case 0x21: //BL_EMD_BULK_TRANSFER\n                //console.log('BL_END_BULK_transfer');\n                console.log('BL_EMD_BULK_TRANSFER');\n\n                var checksum = getBulkTransfterCheckSum(deviceData);\n                //console.log(result);\n                dispatch({\n                    type: BULK_UPDATE_SECTOR_VALIDATE,\n                    payload: checksum\n                  });\n                break;\n            case 0x70: //BL_WRITE_SECTOR_RESULT\n                console.log('BL_WRITE_SECTOR_RESULT');\n                result = getBulkWriteSectorResult(deviceData);\n                console.log('result: ', result);\n                dispatch({\n                  type: BULK_SECTOR_WRITE_RESULT,\n                  payload: result\n                });\n        }\n    };\n}\n\nexport function saveSystemConfig(systemConfig, device){\n  console.log('SAVE_SYSTEM_CONFIG', systemConfig);\n  let data = prepareInputSettings(systemConfig);\n  console.log(data);\n  device.sendReport(0x00, new Uint8Array(data));\n  return {\n    type: 'SAVE_SYSTEM_CONFIG',\n    payload: \"\"\n};\n}\n\nexport function sendSoftwareUpdateData(action, update_status, device){\n    var data = [];\n\n    switch(action){\n      case SET_UP_BULK_TRANSFER:\n        console.log(\"inside software update action\", SET_UP_BULK_TRANSFER);\n        console.log(update_status);\n        data = setUpBulkTransferData(update_status);\n        console.log(data);\n        device.sendReport(0x00, new Uint8Array(data));\n        return {\n            type: SET_UP_BULK_TRANSFER,\n            payload: \"\"\n        };\n      case START_TRANSFER:\n        console.log(\"inside software update action\", START_TRANSFER);\n        data = setUpTransferStart()\n        device.sendReport(0x00, new Uint8Array(data));\n        return {\n          type: REQUEST_TRANSFER_START,\n          payload: \"\"\n        };\n      case BULK_SECTOR_WRITE:\n        console.log(\"inside software update action\", BULK_SECTOR_WRITE);\n        data = setUpBulkSectorWrite(update_status);\n        device.sendReport(0x00, new Uint8Array(data));\n        return {\n          type: BULK_SECTOR_WRITE_IN_PROGRESS,\n          payload: \"\"\n        };\n      /*\n      case PACKET_SEND:\n        ////console.log(\"inside software update action\", PACKET_SEND);\n        data = setUpPacketData(update_status);\n        ////console.log(\"sendSoftwareUpdateData\", data);\n        device.sendReport(0x00, new Uint8Array(data));\n        return {\n          type: REQUEST_PACKET_SEND,\n          payload: \"\"\n        };\n      case BLOCK_VALIDATE:\n        ////console.log(\"inside software update action\", BLOCK_VALIDATE);\n        data = setUpBlockValidateData(update_status);\n        device.sendReport(0x00, new Uint8Array(data));\n        return {\n          type: REQUEST_VALIDATE_BLOCK_SEND,\n          payload: \"\"\n        };\n      case SECTOR_WRITE:\n        console.log(\"inside software update action\", SECTOR_WRITE);\n        data = setUpSectorWriteData(update_status);\n        device.sendReport(0x00, new Uint8Array(data));\n        return {\n          type: REQUEST_SECTOR_WRITE_SEND,\n          payload: \"\"\n        };\n      */\n    }\n}\n\nexport function setSystemSetting(action, setting, value){\n  let tmp = {};\n  tmp[setting] = value;\n  console.log(setting);\n  console.log(value);\n  console.log('in setSystemSetting',tmp );\n  return {\n    type: action,\n    payload: tmp\n  }; \n}\n\n\nexport function sendBulkUpdateData(action, update_status, device){\n  console.log(\"inside sendBulkUpdateData\");\n  return (dispatch) => {\n    dispatch({\n        type: BULK_UPDATE_IN_PROGRESS,\n        payload: \"\"\n    });\n    let currentSector = update_status.current_sector;\n    let currentSectorData = update_status.sectors_data[currentSector].sectorData;\n    //console.log(currentSectorData);\n    let tmpSum = 0;\n    //SECTOR_SIZE = 8192 / HID_TRANSFER_SIZE = 64 \n    for(var i = 0; i < 128; i++){\n      //console.log(\"i=\", i);\n      let tmpArray = [];\n      for(var p = 0; p < 64; p++){\n        tmpSum += (currentSectorData[(64*i)+p]);\n        tmpArray.push((currentSectorData[(64*i)+p]));\n      }\n      //console.log('i: ', i , 'sum: ', tmpSum);\n      //console.log(tmpArray);\n      device.sendReport(0x00, new Uint8Array(tmpArray));\n    } \n    console.log('sending tmpSum: ', tmpSum) \n  };\n}\n\nexport function handleDeviceRemoved(){\n    return {\n        type: DEVICE_REMOVED,\n        payload: \"\"\n    };\n}","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/containers/device.js",["192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217"],"/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/reducers/reducer_sofrtware_update.js",["218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239"],"import { DEVICE_REMOVED } from '../utils/constants';\nimport { COMPLETE_UPDATE_REQUEST,\n         REQUEST_DATA_SETUP_RESPONSE,\n         REQUEST_TRANSFER_START_RESPONSE,\n         REQUEST_PACKET_SEND_RESPONSE,\n         REQUEST_VALIDATE_BLOCK_SEND_RESPONSE,\n         REQUEST_SECTOR_WRITE_SEND_RESPONSE,\n         REQUEST_REBOOT_AFTER_UPDATE } from '../utils/constants';\n\nimport { UPDATE_NOT_STARTED,\n         FTP_LOAD_SUCCESS,\n         SET_UP_TRANSFER,\n         SET_UP_BULK_TRANSFER,\n         START_TRANSFER,\n         START_BULK_TRANSFER,\n         BULK_UPDATE_IN_PROGRESS,\n         BULK_UPDATE_SECTOR_VALIDATE,\n         BULK_SECTOR_WRITE,\n         BULK_SECTOR_WRITE_IN_PROGRESS,\n         BULK_SECTOR_WRITE_RESULT,\n         PACKET_SEND,\n         BLOCK_VALIDATE,\n         SECTOR_WRITE,\n         TRANSFER_COMPLETED,\n         DB_UPDATE_COMPLETED,\n         UPDATE_ERROR,\n         DISPLAY_UPDATE_ERROR,\n         DISPLAY_UPDATE_SETUP_ERROR,\n         DEVICE_START_SECTOR,\n         DEVICE_SUPPORTED } from '../utils/constants'\n\nimport { FILE_WRITE_STRUCTURE } from '../utils/structures';\n\nconst BLOCK_SIZE = 512;\nconst SMALL_SECTOR_SIZE = 8192;\n\nconst SECTOR_WRITE_SUCCESS = 2;\nconst SECTOR_WRITE_ERROR = 3;\n\nconst DEFAULT_UPDATE_STATE = { total_number_of_sectors: 0,\n                               current_sector: 0,\n                               software_file: '',\n                               sectors_data: [],\n                               file_check_sum: 0,\n                               file_size: 0,\n                               num_of_erorrs: 0,\n                               sw_id: 0,\n                               sw_build: 0,\n                               vehicle_make: '',\n                               vehicle_model: '',\n                               update_progress_status: UPDATE_NOT_STARTED\n                            };\n\nexport default function(state = DEFAULT_UPDATE_STATE, action){\n  //console.log(\"in software update reducer\");\n  let new_state = {};\n  let payload_data = {};\n  switch (action.type){\n    case FTP_LOAD_SUCCESS:\n      ////console.log(action.payload);\n      console.log(\"********* Software Update Reducer FTP_LOAD_SUCCESS !!**********\");\n      new_state = JSON.parse(JSON.stringify(DEFAULT_UPDATE_STATE));\n      new_state.total_number_of_sectors = Math.ceil(action.payload.size / SMALL_SECTOR_SIZE);\n      new_state.current_sector = 0;\n      new_state.software_file = atob(action.payload.file);\n      new_state.file_size = action.payload.size;\n      new_state.sw_id = action.payload.sw_id;\n      new_state.sw_build = action.payload.sw_build;\n      new_state.vehicle_make = action.payload.vehicle_make;\n      new_state.vehicle_model = action.payload.vehicle_model;\n      var currentSum = 0;\n      for (var i = 0; i < new_state.file_size; i++) {\n        var el = new_state.software_file.charCodeAt(i);\n        currentSum += el;\n      }\n      new_state.file_check_sum = currentSum;\n      new_state.update_progress_status = FTP_LOAD_SUCCESS;\n      return prepareSectorData(new_state);\n    case START_BULK_TRANSFER:\n      new_state = JSON.parse(JSON.stringify(state));\n      new_state.update_progress_status = START_BULK_TRANSFER;\n      return new_state;\n    case BULK_UPDATE_IN_PROGRESS:\n      new_state = JSON.parse(JSON.stringify(state));\n      new_state.update_progress_status = BULK_UPDATE_IN_PROGRESS;\n      return new_state;\n    case BULK_UPDATE_SECTOR_VALIDATE:\n      new_state = JSON.parse(JSON.stringify(state));\n      var checksum = action.payload;\n      let currentSector = new_state.current_sector;\n      let currentSectorSum= new_state.sectors_data[currentSector].sectorSum;\n      console.log('in reducer current secotr sum:', currentSectorSum);\n      console.log('in reducer check sum: ', checksum);\n      if(currentSectorSum != checksum){\n        new_state.num_of_erorrs = new_state.num_of_erorrs  + 1;\n        console.log('checksum error. count: ', new_state.num_of_erorrs);\n        if(new_state.num_of_erorrs <=3){\n          new_state.update_progress_status = SET_UP_BULK_TRANSFER;\n        }else{\n          new_state.update_progress_status = UPDATE_ERROR;\n        }\n      }else{\n        //start sector write\n        new_state.num_of_erorrs = 0;\n        new_state.update_progress_status = BULK_SECTOR_WRITE;\n      }\n      return new_state;\n    case BULK_SECTOR_WRITE:\n      new_state = JSON.parse(JSON.stringify(state));\n      new_state.update_progress_status = BULK_SECTOR_WRITE_IN_PROGRESS;\n      return new_state;\n    case BULK_SECTOR_WRITE_RESULT:\n      console.log('in reducer BULK_SECTOR_WRITE_RESULT');\n      new_state = JSON.parse(JSON.stringify(state));\n      if(action.payload.writeResult == SECTOR_WRITE_SUCCESS){\n        new_state.current_sector += 1;\n        console.log('update current sector: ', new_state.current_sector);\n        if(new_state.current_sector < new_state.total_number_of_sectors){\n          new_state.update_progress_status = SET_UP_BULK_TRANSFER;\n        }else{\n          new_state.update_progress_status = TRANSFER_COMPLETED;\n        }\n      }else{\n        new_state = JSON.parse(JSON.stringify(DEFAULT_UPDATE_STATE));\n        new_state.update_progress_status = UPDATE_ERROR;\n      }\n      return new_state;\n    case UPDATE_ERROR:\n      new_state = JSON.parse(JSON.stringify(DEFAULT_UPDATE_STATE));\n      new_state.update_progress_status = DISPLAY_UPDATE_ERROR;\n      return new_state;\n    case DISPLAY_UPDATE_ERROR:\n      console.log('########## reset status UPDATE_NOT_STARTED #####');\n      new_state = JSON.parse(JSON.stringify(state));\n      new_state.update_progress_status = UPDATE_NOT_STARTED;\n      return new_state;\n    case DISPLAY_UPDATE_SETUP_ERROR:\n      console.log('########## reset status DISPLAY_UPDATE_SETUP_ERROR #####');\n      new_state = JSON.parse(JSON.stringify(state));\n      new_state.update_progress_status = UPDATE_ERROR;\n      return new_state;\n    case DEVICE_REMOVED:\n        new_state = JSON.parse(JSON.stringify(DEFAULT_UPDATE_STATE));\n        new_state.update_progress_status = DISPLAY_UPDATE_ERROR;\n        return new_state;\n  }\n  return state;\n}\n\nfunction prepareSectorData(new_state){\n  console.log('prepariong sector data');\n  var tmpSectors = [];\n  for (var currentSector = 0; currentSector < new_state.total_number_of_sectors; currentSector++) {\n    var currentSectorSum = 0;\n    var currentStart = currentSector * SMALL_SECTOR_SIZE;\n    var currentEnd = currentStart + SMALL_SECTOR_SIZE;\n    let tmpDataArray = new Array(SMALL_SECTOR_SIZE).fill(255);\n    var j, k;\n    for (j = currentStart, k=0; j < currentEnd; j++, k++) {     \n      if(j < new_state.file_size){\n        var el = new_state.software_file.charCodeAt(j);\n        tmpDataArray[k] = el;\n      }\n      currentSectorSum += tmpDataArray[k];\n    }\n    var tmpSector = Object.assign({},FILE_WRITE_STRUCTURE.values[currentSector], {sectorData: tmpDataArray, sectorSum: currentSectorSum});\n    tmpSectors.push(tmpSector);\n    console.log(tmpSectors);\n  }\n  new_state.sectors_data = tmpSectors;\n  //(currentPacket);\n  //console.log(currentSum);\n  //console.log(new_state.curerent_packet_sum);\n  //console.log(\"Packet data in reducer\", new_state);\n  return new_state;\n}","/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/containers/device_info.js",["240","241","242","243","244","245","246","247","248","249","250","251"],"/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/actions/get_device_data.js",["252","253","254","255","256","257","258"],"/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/actions/get_software.js",["259","260","261","262","263"],"/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/reducers/reducer_software_list.js",["264","265"],"/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/containers/software_list.js",["266","267"],"/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/reducers/reducer_make.js",["268","269"],"/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/containers/make_list.js",["270","271"],"/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/containers/software_search.js",["272"],"/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/containers/year_list.js",["273"],"/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/containers/transmission_option.js",["274"],"/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/containers/model_list.js",["275"],"/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/reducers/reducer_model.js",["276","277"],"/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/reducers/reducer_year.js",["278","279"],"/Users/olegsokolov/Documents/NavtoolProjects/navtool-web-hid/src/reducers/reducer_software_search.js",["280","281"],{"ruleId":"282","replacedBy":"283"},{"ruleId":"284","replacedBy":"285"},{"ruleId":"286","severity":1,"message":"287","line":1,"column":8,"nodeType":"288","messageId":"289","endLine":1,"endColumn":12},{"ruleId":"286","severity":1,"message":"290","line":7,"column":13,"nodeType":"288","messageId":"289","endLine":7,"endColumn":34},{"ruleId":"291","severity":1,"message":"292","line":27,"column":18,"nodeType":"293","messageId":"294","endLine":27,"endColumn":20},{"ruleId":"291","severity":1,"message":"292","line":169,"column":15,"nodeType":"293","messageId":"294","endLine":169,"endColumn":17},{"ruleId":"295","severity":1,"message":"296","line":185,"column":11,"nodeType":"288","messageId":"297","endLine":185,"endColumn":12},{"ruleId":"295","severity":1,"message":"296","line":202,"column":11,"nodeType":"288","messageId":"297","endLine":202,"endColumn":12},{"ruleId":"291","severity":1,"message":"292","line":214,"column":71,"nodeType":"293","messageId":"294","endLine":214,"endColumn":73},{"ruleId":"291","severity":1,"message":"292","line":234,"column":15,"nodeType":"293","messageId":"294","endLine":234,"endColumn":17},{"ruleId":"286","severity":1,"message":"298","line":245,"column":11,"nodeType":"288","messageId":"289","endLine":245,"endColumn":27},{"ruleId":"291","severity":1,"message":"292","line":291,"column":23,"nodeType":"293","messageId":"294","endLine":291,"endColumn":25},{"ruleId":"295","severity":1,"message":"296","line":332,"column":12,"nodeType":"288","messageId":"297","endLine":332,"endColumn":13},{"ruleId":"295","severity":1,"message":"296","line":339,"column":12,"nodeType":"288","messageId":"297","endLine":339,"endColumn":13},{"ruleId":"286","severity":1,"message":"299","line":340,"column":5,"nodeType":"288","messageId":"289","endLine":340,"endColumn":16},{"ruleId":"295","severity":1,"message":"296","line":342,"column":12,"nodeType":"288","messageId":"297","endLine":342,"endColumn":13},{"ruleId":"286","severity":1,"message":"300","line":343,"column":5,"nodeType":"288","messageId":"289","endLine":343,"endColumn":17},{"ruleId":"295","severity":1,"message":"296","line":350,"column":11,"nodeType":"288","messageId":"297","endLine":350,"endColumn":12},{"ruleId":"286","severity":1,"message":"301","line":393,"column":7,"nodeType":"288","messageId":"289","endLine":393,"endColumn":21},{"ruleId":"286","severity":1,"message":"302","line":442,"column":7,"nodeType":"288","messageId":"289","endLine":442,"endColumn":17},{"ruleId":"286","severity":1,"message":"303","line":546,"column":7,"nodeType":"288","messageId":"289","endLine":546,"endColumn":23},{"ruleId":"286","severity":1,"message":"303","line":582,"column":7,"nodeType":"288","messageId":"289","endLine":582,"endColumn":23},{"ruleId":"291","severity":1,"message":"292","line":610,"column":45,"nodeType":"293","messageId":"294","endLine":610,"endColumn":47},{"ruleId":"286","severity":1,"message":"303","line":627,"column":7,"nodeType":"288","messageId":"289","endLine":627,"endColumn":23},{"ruleId":"286","severity":1,"message":"304","line":11,"column":11,"nodeType":"288","messageId":"289","endLine":11,"endColumn":24},{"ruleId":"305","severity":1,"message":"306","line":14,"column":1,"nodeType":"307","endLine":200,"endColumn":2},{"ruleId":"308","severity":1,"message":"309","line":18,"column":3,"nodeType":"310","messageId":"311","endLine":198,"endColumn":4},{"ruleId":"312","severity":1,"message":"313","line":50,"column":5,"nodeType":"314","messageId":"315","endLine":56,"endColumn":24},{"ruleId":"286","severity":1,"message":"316","line":66,"column":11,"nodeType":"288","messageId":"289","endLine":66,"endColumn":18},{"ruleId":"286","severity":1,"message":"317","line":67,"column":11,"nodeType":"288","messageId":"289","endLine":67,"endColumn":20},{"ruleId":"291","severity":1,"message":"292","line":75,"column":19,"nodeType":"293","messageId":"294","endLine":75,"endColumn":21},{"ruleId":"286","severity":1,"message":"318","line":81,"column":23,"nodeType":"288","messageId":"289","endLine":81,"endColumn":36},{"ruleId":"295","severity":1,"message":"296","line":89,"column":15,"nodeType":"288","messageId":"297","endLine":89,"endColumn":16},{"ruleId":"286","severity":1,"message":"319","line":92,"column":9,"nodeType":"288","messageId":"289","endLine":92,"endColumn":19},{"ruleId":"286","severity":1,"message":"320","line":100,"column":7,"nodeType":"288","messageId":"289","endLine":100,"endColumn":20},{"ruleId":"295","severity":1,"message":"296","line":181,"column":16,"nodeType":"288","messageId":"297","endLine":181,"endColumn":17},{"ruleId":"286","severity":1,"message":"299","line":182,"column":9,"nodeType":"288","messageId":"289","endLine":182,"endColumn":20},{"ruleId":"295","severity":1,"message":"296","line":184,"column":16,"nodeType":"288","messageId":"297","endLine":184,"endColumn":17},{"ruleId":"286","severity":1,"message":"300","line":185,"column":9,"nodeType":"288","messageId":"289","endLine":185,"endColumn":21},{"ruleId":"295","severity":1,"message":"296","line":189,"column":16,"nodeType":"288","messageId":"297","endLine":189,"endColumn":17},{"ruleId":"286","severity":1,"message":"321","line":4,"column":13,"nodeType":"288","messageId":"289","endLine":4,"endColumn":33},{"ruleId":"286","severity":1,"message":"322","line":6,"column":13,"nodeType":"288","messageId":"289","endLine":6,"endColumn":28},{"ruleId":"286","severity":1,"message":"323","line":15,"column":13,"nodeType":"288","messageId":"289","endLine":15,"endColumn":24},{"ruleId":"286","severity":1,"message":"324","line":16,"column":13,"nodeType":"288","messageId":"289","endLine":16,"endColumn":32},{"ruleId":"286","severity":1,"message":"325","line":17,"column":13,"nodeType":"288","messageId":"289","endLine":17,"endColumn":25},{"ruleId":"286","severity":1,"message":"326","line":18,"column":13,"nodeType":"288","messageId":"289","endLine":18,"endColumn":27},{"ruleId":"286","severity":1,"message":"327","line":19,"column":13,"nodeType":"288","messageId":"289","endLine":19,"endColumn":49},{"ruleId":"286","severity":1,"message":"328","line":20,"column":13,"nodeType":"288","messageId":"289","endLine":20,"endColumn":40},{"ruleId":"286","severity":1,"message":"329","line":21,"column":13,"nodeType":"288","messageId":"289","endLine":21,"endColumn":38},{"ruleId":"286","severity":1,"message":"330","line":22,"column":13,"nodeType":"288","messageId":"289","endLine":22,"endColumn":47},{"ruleId":"286","severity":1,"message":"331","line":23,"column":13,"nodeType":"288","messageId":"289","endLine":23,"endColumn":41},{"ruleId":"286","severity":1,"message":"332","line":24,"column":13,"nodeType":"288","messageId":"289","endLine":24,"endColumn":31},{"ruleId":"286","severity":1,"message":"333","line":25,"column":13,"nodeType":"288","messageId":"289","endLine":25,"endColumn":40},{"ruleId":"286","severity":1,"message":"334","line":27,"column":13,"nodeType":"288","messageId":"289","endLine":27,"endColumn":44},{"ruleId":"286","severity":1,"message":"335","line":30,"column":10,"nodeType":"288","messageId":"289","endLine":30,"endColumn":25},{"ruleId":"286","severity":1,"message":"336","line":31,"column":5,"nodeType":"288","messageId":"289","endLine":31,"endColumn":20},{"ruleId":"286","severity":1,"message":"337","line":32,"column":5,"nodeType":"288","messageId":"289","endLine":32,"endColumn":18},{"ruleId":"286","severity":1,"message":"338","line":33,"column":5,"nodeType":"288","messageId":"289","endLine":33,"endColumn":22},{"ruleId":"286","severity":1,"message":"339","line":34,"column":5,"nodeType":"288","messageId":"289","endLine":34,"endColumn":25},{"ruleId":"286","severity":1,"message":"340","line":35,"column":5,"nodeType":"288","messageId":"289","endLine":35,"endColumn":25},{"ruleId":"286","severity":1,"message":"341","line":36,"column":5,"nodeType":"288","messageId":"289","endLine":36,"endColumn":19},{"ruleId":"286","severity":1,"message":"342","line":37,"column":5,"nodeType":"288","messageId":"289","endLine":37,"endColumn":22},{"ruleId":"286","severity":1,"message":"343","line":44,"column":5,"nodeType":"288","messageId":"289","endLine":44,"endColumn":30},{"ruleId":"286","severity":1,"message":"344","line":46,"column":5,"nodeType":"288","messageId":"289","endLine":46,"endColumn":20},{"ruleId":"286","severity":1,"message":"345","line":47,"column":5,"nodeType":"288","messageId":"289","endLine":47,"endColumn":28},{"ruleId":"286","severity":1,"message":"346","line":48,"column":5,"nodeType":"288","messageId":"289","endLine":48,"endColumn":27},{"ruleId":"286","severity":1,"message":"347","line":49,"column":5,"nodeType":"288","messageId":"289","endLine":49,"endColumn":29},{"ruleId":"286","severity":1,"message":"348","line":50,"column":5,"nodeType":"288","messageId":"289","endLine":50,"endColumn":25},{"ruleId":"286","severity":1,"message":"349","line":51,"column":5,"nodeType":"288","messageId":"289","endLine":51,"endColumn":19},{"ruleId":"286","severity":1,"message":"350","line":52,"column":5,"nodeType":"288","messageId":"289","endLine":52,"endColumn":24},{"ruleId":"286","severity":1,"message":"351","line":58,"column":9,"nodeType":"288","messageId":"289","endLine":58,"endColumn":18},{"ruleId":"291","severity":1,"message":"352","line":61,"column":23,"nodeType":"293","messageId":"294","endLine":61,"endColumn":25},{"ruleId":"308","severity":1,"message":"309","line":65,"column":9,"nodeType":"310","messageId":"311","endLine":115,"endColumn":10},{"ruleId":"308","severity":1,"message":"309","line":68,"column":17,"nodeType":"310","messageId":"311","endLine":84,"endColumn":18},{"ruleId":"308","severity":1,"message":"309","line":133,"column":5,"nodeType":"310","messageId":"311","endLine":187,"endColumn":6},{"ruleId":"286","severity":1,"message":"353","line":3,"column":8,"nodeType":"288","messageId":"289","endLine":3,"endColumn":9},{"ruleId":"286","severity":1,"message":"322","line":20,"column":11,"nodeType":"288","messageId":"289","endLine":20,"endColumn":26},{"ruleId":"286","severity":1,"message":"354","line":21,"column":11,"nodeType":"288","messageId":"289","endLine":21,"endColumn":25},{"ruleId":"291","severity":1,"message":"352","line":75,"column":21,"nodeType":"293","messageId":"294","endLine":75,"endColumn":23},{"ruleId":"291","severity":1,"message":"292","line":93,"column":21,"nodeType":"293","messageId":"294","endLine":93,"endColumn":23},{"ruleId":"291","severity":1,"message":"292","line":115,"column":29,"nodeType":"293","messageId":"294","endLine":115,"endColumn":31},{"ruleId":"291","severity":1,"message":"292","line":140,"column":21,"nodeType":"293","messageId":"294","endLine":140,"endColumn":23},{"ruleId":"291","severity":1,"message":"292","line":174,"column":47,"nodeType":"293","messageId":"294","endLine":174,"endColumn":49},{"ruleId":"291","severity":1,"message":"292","line":275,"column":48,"nodeType":"293","messageId":"294","endLine":275,"endColumn":50},{"ruleId":"291","severity":1,"message":"292","line":287,"column":40,"nodeType":"293","messageId":"294","endLine":287,"endColumn":42},{"ruleId":"291","severity":1,"message":"292","line":287,"column":115,"nodeType":"293","messageId":"294","endLine":287,"endColumn":117},{"ruleId":"291","severity":1,"message":"292","line":292,"column":45,"nodeType":"293","messageId":"294","endLine":292,"endColumn":47},{"ruleId":"291","severity":1,"message":"292","line":292,"column":120,"nodeType":"293","messageId":"294","endLine":292,"endColumn":122},{"ruleId":"291","severity":1,"message":"292","line":296,"column":45,"nodeType":"293","messageId":"294","endLine":296,"endColumn":47},{"ruleId":"291","severity":1,"message":"292","line":296,"column":120,"nodeType":"293","messageId":"294","endLine":296,"endColumn":122},{"ruleId":"291","severity":1,"message":"292","line":300,"column":45,"nodeType":"293","messageId":"294","endLine":300,"endColumn":47},{"ruleId":"291","severity":1,"message":"292","line":300,"column":120,"nodeType":"293","messageId":"294","endLine":300,"endColumn":122},{"ruleId":"291","severity":1,"message":"352","line":301,"column":60,"nodeType":"293","messageId":"294","endLine":301,"endColumn":62},{"ruleId":"291","severity":1,"message":"292","line":306,"column":45,"nodeType":"293","messageId":"294","endLine":306,"endColumn":47},{"ruleId":"291","severity":1,"message":"292","line":306,"column":120,"nodeType":"293","messageId":"294","endLine":306,"endColumn":122},{"ruleId":"291","severity":1,"message":"292","line":310,"column":45,"nodeType":"293","messageId":"294","endLine":310,"endColumn":47},{"ruleId":"291","severity":1,"message":"292","line":310,"column":120,"nodeType":"293","messageId":"294","endLine":310,"endColumn":122},{"ruleId":"291","severity":1,"message":"292","line":314,"column":45,"nodeType":"293","messageId":"294","endLine":314,"endColumn":47},{"ruleId":"291","severity":1,"message":"292","line":314,"column":120,"nodeType":"293","messageId":"294","endLine":314,"endColumn":122},{"ruleId":"291","severity":1,"message":"292","line":318,"column":45,"nodeType":"293","messageId":"294","endLine":318,"endColumn":47},{"ruleId":"291","severity":1,"message":"292","line":318,"column":120,"nodeType":"293","messageId":"294","endLine":318,"endColumn":122},{"ruleId":"286","severity":1,"message":"355","line":2,"column":10,"nodeType":"288","messageId":"289","endLine":2,"endColumn":33},{"ruleId":"286","severity":1,"message":"333","line":3,"column":10,"nodeType":"288","messageId":"289","endLine":3,"endColumn":37},{"ruleId":"286","severity":1,"message":"334","line":4,"column":10,"nodeType":"288","messageId":"289","endLine":4,"endColumn":41},{"ruleId":"286","severity":1,"message":"331","line":5,"column":10,"nodeType":"288","messageId":"289","endLine":5,"endColumn":38},{"ruleId":"286","severity":1,"message":"327","line":6,"column":10,"nodeType":"288","messageId":"289","endLine":6,"endColumn":46},{"ruleId":"286","severity":1,"message":"330","line":7,"column":10,"nodeType":"288","messageId":"289","endLine":7,"endColumn":44},{"ruleId":"286","severity":1,"message":"356","line":8,"column":10,"nodeType":"288","messageId":"289","endLine":8,"endColumn":37},{"ruleId":"286","severity":1,"message":"322","line":12,"column":10,"nodeType":"288","messageId":"289","endLine":12,"endColumn":25},{"ruleId":"286","severity":1,"message":"354","line":14,"column":10,"nodeType":"288","messageId":"289","endLine":14,"endColumn":24},{"ruleId":"286","severity":1,"message":"323","line":21,"column":10,"nodeType":"288","messageId":"289","endLine":21,"endColumn":21},{"ruleId":"286","severity":1,"message":"326","line":22,"column":10,"nodeType":"288","messageId":"289","endLine":22,"endColumn":24},{"ruleId":"286","severity":1,"message":"325","line":23,"column":10,"nodeType":"288","messageId":"289","endLine":23,"endColumn":22},{"ruleId":"286","severity":1,"message":"357","line":25,"column":10,"nodeType":"288","messageId":"289","endLine":25,"endColumn":29},{"ruleId":"286","severity":1,"message":"358","line":29,"column":10,"nodeType":"288","messageId":"289","endLine":29,"endColumn":29},{"ruleId":"286","severity":1,"message":"359","line":30,"column":10,"nodeType":"288","messageId":"289","endLine":30,"endColumn":26},{"ruleId":"286","severity":1,"message":"360","line":34,"column":7,"nodeType":"288","messageId":"289","endLine":34,"endColumn":17},{"ruleId":"286","severity":1,"message":"361","line":38,"column":7,"nodeType":"288","messageId":"289","endLine":38,"endColumn":25},{"ruleId":"305","severity":1,"message":"306","line":54,"column":1,"nodeType":"307","endLine":148,"endColumn":2},{"ruleId":"286","severity":1,"message":"362","line":57,"column":7,"nodeType":"288","messageId":"289","endLine":57,"endColumn":19},{"ruleId":"308","severity":1,"message":"309","line":58,"column":3,"nodeType":"310","messageId":"311","endLine":146,"endColumn":4},{"ruleId":"291","severity":1,"message":"352","line":94,"column":27,"nodeType":"293","messageId":"294","endLine":94,"endColumn":29},{"ruleId":"291","severity":1,"message":"292","line":115,"column":37,"nodeType":"293","messageId":"294","endLine":115,"endColumn":39},{"ruleId":"291","severity":1,"message":"292","line":36,"column":49,"nodeType":"293","messageId":"294","endLine":36,"endColumn":51},{"ruleId":"291","severity":1,"message":"292","line":38,"column":56,"nodeType":"293","messageId":"294","endLine":38,"endColumn":58},{"ruleId":"291","severity":1,"message":"292","line":51,"column":51,"nodeType":"293","messageId":"294","endLine":51,"endColumn":53},{"ruleId":"291","severity":1,"message":"292","line":53,"column":58,"nodeType":"293","messageId":"294","endLine":53,"endColumn":60},{"ruleId":"291","severity":1,"message":"292","line":66,"column":49,"nodeType":"293","messageId":"294","endLine":66,"endColumn":51},{"ruleId":"291","severity":1,"message":"352","line":113,"column":51,"nodeType":"293","messageId":"294","endLine":113,"endColumn":53},{"ruleId":"291","severity":1,"message":"352","line":129,"column":51,"nodeType":"293","messageId":"294","endLine":129,"endColumn":53},{"ruleId":"291","severity":1,"message":"292","line":143,"column":46,"nodeType":"293","messageId":"294","endLine":143,"endColumn":48},{"ruleId":"291","severity":1,"message":"292","line":149,"column":52,"nodeType":"293","messageId":"294","endLine":149,"endColumn":54},{"ruleId":"363","severity":1,"message":"364","line":162,"column":19,"nodeType":"365","endLine":162,"endColumn":84},{"ruleId":"363","severity":1,"message":"364","line":166,"column":19,"nodeType":"365","endLine":166,"endColumn":85},{"ruleId":"363","severity":1,"message":"364","line":170,"column":19,"nodeType":"365","endLine":170,"endColumn":84},{"ruleId":"286","severity":1,"message":"366","line":9,"column":30,"nodeType":"288","messageId":"289","endLine":9,"endColumn":47},{"ruleId":"291","severity":1,"message":"292","line":70,"column":17,"nodeType":"293","messageId":"294","endLine":70,"endColumn":19},{"ruleId":"367","severity":1,"message":"368","line":71,"column":53,"nodeType":"293","messageId":"369","endLine":71,"endColumn":54},{"ruleId":"367","severity":1,"message":"368","line":93,"column":54,"nodeType":"293","messageId":"369","endLine":93,"endColumn":55},{"ruleId":"291","severity":1,"message":"292","line":100,"column":30,"nodeType":"293","messageId":"294","endLine":100,"endColumn":32},{"ruleId":"291","severity":1,"message":"292","line":100,"column":56,"nodeType":"293","messageId":"294","endLine":100,"endColumn":58},{"ruleId":"367","severity":1,"message":"368","line":113,"column":54,"nodeType":"293","messageId":"369","endLine":113,"endColumn":55},{"ruleId":"291","severity":1,"message":"352","line":19,"column":43,"nodeType":"293","messageId":"294","endLine":19,"endColumn":45},{"ruleId":"291","severity":1,"message":"352","line":22,"column":45,"nodeType":"293","messageId":"294","endLine":22,"endColumn":47},{"ruleId":"291","severity":1,"message":"352","line":25,"column":43,"nodeType":"293","messageId":"294","endLine":25,"endColumn":45},{"ruleId":"291","severity":1,"message":"292","line":28,"column":63,"nodeType":"293","messageId":"294","endLine":28,"endColumn":65},{"ruleId":"291","severity":1,"message":"352","line":59,"column":22,"nodeType":"293","messageId":"294","endLine":59,"endColumn":24},{"ruleId":"305","severity":1,"message":"306","line":5,"column":1,"nodeType":"307","endLine":19,"endColumn":2},{"ruleId":"308","severity":1,"message":"309","line":6,"column":3,"nodeType":"310","messageId":"311","endLine":17,"endColumn":4},{"ruleId":"286","severity":1,"message":"370","line":3,"column":8,"nodeType":"288","messageId":"289","endLine":3,"endColumn":17},{"ruleId":"286","severity":1,"message":"371","line":35,"column":9,"nodeType":"288","messageId":"289","endLine":35,"endColumn":14},{"ruleId":"305","severity":1,"message":"306","line":5,"column":1,"nodeType":"307","endLine":17,"endColumn":2},{"ruleId":"308","severity":1,"message":"309","line":6,"column":3,"nodeType":"310","messageId":"311","endLine":15,"endColumn":4},{"ruleId":"286","severity":1,"message":"372","line":3,"column":10,"nodeType":"288","messageId":"289","endLine":3,"endColumn":28},{"ruleId":"291","severity":1,"message":"292","line":21,"column":48,"nodeType":"293","messageId":"294","endLine":21,"endColumn":50},{"ruleId":"291","severity":1,"message":"292","line":29,"column":49,"nodeType":"293","messageId":"294","endLine":29,"endColumn":51},{"ruleId":"286","severity":1,"message":"372","line":3,"column":10,"nodeType":"288","messageId":"289","endLine":3,"endColumn":28},{"ruleId":"286","severity":1,"message":"372","line":3,"column":10,"nodeType":"288","messageId":"289","endLine":3,"endColumn":28},{"ruleId":"286","severity":1,"message":"372","line":3,"column":10,"nodeType":"288","messageId":"289","endLine":3,"endColumn":28},{"ruleId":"305","severity":1,"message":"306","line":9,"column":1,"nodeType":"307","endLine":23,"endColumn":2},{"ruleId":"308","severity":1,"message":"309","line":10,"column":3,"nodeType":"310","messageId":"311","endLine":21,"endColumn":4},{"ruleId":"305","severity":1,"message":"306","line":9,"column":1,"nodeType":"307","endLine":25,"endColumn":2},{"ruleId":"308","severity":1,"message":"309","line":10,"column":3,"nodeType":"310","messageId":"311","endLine":23,"endColumn":4},{"ruleId":"305","severity":1,"message":"306","line":15,"column":1,"nodeType":"307","endLine":68,"endColumn":2},{"ruleId":"308","severity":1,"message":"309","line":17,"column":3,"nodeType":"310","messageId":"311","endLine":66,"endColumn":4},"no-native-reassign",["373"],"no-negated-in-lhs",["374"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'START_SOFTWARE_UPDATE' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'i' is already defined.","redeclared","'binaryStringFrmt' is assigned a value but never used.","'vihicleMake' is assigned a value but never used.","'vihicleModel' is assigned a value but never used.","'byteStringFrmt' is assigned a value but never used.","'totalPages' is assigned a value but never used.","'doubleStringFrmt' is assigned a value but never used.","'getDeviceData' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'zaction' is assigned a value but never used.","'usbResult' is assigned a value but never used.","'serial_number' is assigned a value but never used.","'softwareId' is assigned a value but never used.","'softwareBuild' is assigned a value but never used.","'DEVICE_NOT_SUPPORTED' is defined but never used.","'SET_UP_TRANSFER' is defined but never used.","'PACKET_SEND' is defined but never used.","'REQUEST_PACKET_SEND' is defined but never used.","'SECTOR_WRITE' is defined but never used.","'BLOCK_VALIDATE' is defined but never used.","'REQUEST_VALIDATE_BLOCK_SEND_RESPONSE' is defined but never used.","'REQUEST_VALIDATE_BLOCK_SEND' is defined but never used.","'REQUEST_SECTOR_WRITE_SEND' is defined but never used.","'REQUEST_SECTOR_WRITE_SEND_RESPONSE' is defined but never used.","'REQUEST_PACKET_SEND_RESPONSE' is defined but never used.","'REQUEST_DATA_SETUP' is defined but never used.","'REQUEST_DATA_SETUP_RESPONSE' is defined but never used.","'REQUEST_TRANSFER_START_RESPONSE' is defined but never used.","'getSerialNumber' is defined but never used.","'checkOBDSupport' is defined but never used.","'getSoftwareId' is defined but never used.","'setDeviceSettings' is defined but never used.","'setDeviceOSDSettings' is defined but never used.","'setDeviceOBDSettings' is defined but never used.","'setVehicleInfo' is defined but never used.","'setUpTransferData' is defined but never used.","'parseTransferDataResponse' is defined but never used.","'setUpPacketData' is defined but never used.","'parsePacketDataResponse' is defined but never used.","'setUpBlockValidateData' is defined but never used.","'parseSectorWriteResponse' is defined but never used.","'setUpSectorWriteData' is defined but never used.","'parseOBDStatus' is defined but never used.","'setCanFilterMessage' is defined but never used.","'usbResult' is defined but never used.","Expected '!==' and instead saw '!='.","'$' is defined but never used.","'START_TRANSFER' is defined but never used.","'COMPLETE_UPDATE_REQUEST' is defined but never used.","'REQUEST_REBOOT_AFTER_UPDATE' is defined but never used.","'DB_UPDATE_COMPLETED' is defined but never used.","'DEVICE_START_SECTOR' is defined but never used.","'DEVICE_SUPPORTED' is defined but never used.","'BLOCK_SIZE' is assigned a value but never used.","'SECTOR_WRITE_ERROR' is assigned a value but never used.","'payload_data' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'DEVICE_OBD_FAILED' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'DataTable' is defined but never used.","'table' is assigned a value but never used.","'bindActionCreators' is defined but never used.","no-global-assign","no-unsafe-negation"]